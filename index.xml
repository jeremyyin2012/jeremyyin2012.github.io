<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jeremy&#39;s blog</title>
    <link>https://jeremyyin.com/</link>
    <description>Recent content on Jeremy&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 27 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jeremyyin.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>给一个列表去除重复数据的最原始方法</title>
      <link>https://jeremyyin.com/python/2018-04-27-%E7%BB%99%E4%B8%80%E4%B8%AA%E5%88%97%E8%A1%A8%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E6%95%B0%E6%8D%AE%E7%9A%84%E6%9C%80%E5%8E%9F%E5%A7%8B%E6%96%B9%E6%B3%95/</link>
      <pubDate>Fri, 27 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/python/2018-04-27-%E7%BB%99%E4%B8%80%E4%B8%AA%E5%88%97%E8%A1%A8%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E6%95%B0%E6%8D%AE%E7%9A%84%E6%9C%80%E5%8E%9F%E5%A7%8B%E6%96%B9%E6%B3%95/</guid>
      <description>啥也不说，先看代码
items = [6, 1, 4, 5, 4, 3, 8, 6] new_items = [] for item in items: if item not in new_items: new_items.append(item) new_items:
[6, 1, 4, 5, 3, 8] 这应该是给一个列表去除重复还保留顺序的最兼容的办法了，为啥叫最兼容，意思是绝大多数情况下你按这个写法去操作，无论列表里面是什么东西，它都能很好地帮你处理成功。
比如，列表里面不是简单的数字或字符，而是一个一个的字典（对象），这也是可以的。
items = [ {&amp;#39;age&amp;#39;: 6}, {&amp;#39;age&amp;#39;: 1}, {&amp;#39;age&amp;#39;: 4}, {&amp;#39;age&amp;#39;: 5}, {&amp;#39;age&amp;#39;: 4}, {&amp;#39;age&amp;#39;: 3}, {&amp;#39;age&amp;#39;: 8}, {&amp;#39;age&amp;#39;: 6}] new_items = [] for item in items: if item not in new_items: new_items.append(item) new_items:
[{&amp;#39;age&amp;#39;: 6}, {&amp;#39;age&amp;#39;: 1}, {&amp;#39;age&amp;#39;: 4}, {&amp;#39;age&amp;#39;: 5}, {&amp;#39;age&amp;#39;: 3}, {&amp;#39;age&amp;#39;: 8}] 而之前有种利用 OrderedDict 进行操作去重复并保留顺序的方法，则不适用于这种包含多个字典的情况。</description>
    </item>
    
    <item>
      <title>今天全是干货</title>
      <link>https://jeremyyin.com/post/2018-04-26-%E4%BB%8A%E5%A4%A9%E5%85%A8%E6%98%AF%E5%B9%B2%E8%B4%A7/</link>
      <pubDate>Thu, 26 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2018-04-26-%E4%BB%8A%E5%A4%A9%E5%85%A8%E6%98%AF%E5%B9%B2%E8%B4%A7/</guid>
      <description>公司一个产品正式接入支付系统，搞了很久很久了，或许明天就能上线了吧。
其实也不是什么很大的东西，可现实是残酷的，无力感很重，我们老板应该更会深有感触。
一年写了 30 几个小产品接口，该想想是不是代码太乱了。Django 说十几行代码完成增删改查，可能培训机构只顾着拉新了吧，MVC 构架可能确实简单。
面向对象听了无数遍，可一次也没创建过自己的对象，一般都用别人现成的对象，还得看别人告诉你怎么用。
要创建自己的对象了。写爬虫和写爬虫，不一样就是不一样的，Hello World 跑起来简单，可 Demo 和生产环境那是两码事儿。
还有，需求一直在变，你知道的吧？
这两周代码写的慢，把一个东西重构了，自己迷糊着创建对象。
所以，一个人或一个环境未来究竟会如何，全看它过去做过啥，在哪里进行发力。
今天全是干货你懂的撒。你买多一点，我就回血多一点。
果然还是买买买才会令我兴奋不已，其它的嘛，抛开不谈也罢。
你都翻到这儿了，朋友圈微信群微博头条抖音走起，赶紧的。</description>
    </item>
    
    <item>
      <title>Saleor 初稿已翻译完成</title>
      <link>https://jeremyyin.com/post/2018-04-22-saleor-%E5%88%9D%E7%A8%BF%E5%B7%B2%E7%BF%BB%E8%AF%91%E5%AE%8C%E6%88%90/</link>
      <pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2018-04-22-saleor-%E5%88%9D%E7%A8%BF%E5%B7%B2%E7%BF%BB%E8%AF%91%E5%AE%8C%E6%88%90/</guid>
      <description>赶在周末结束之前，把 Saleor 的文档初步“翻译”完成，干嘛打个引号，说到底还是心虚，哈哈。
毕竟是借助了绝大多数 Google 翻译的内容，而我就好像是一个审稿者，一句一句看一遍，觉得好就用了，觉得实在是不行就才按自己理解的来，所以，能说有功夫在的，就只能是这部分了。
搜索了下，由于 Python 圈我个人猜测可能基本上不屑于（这里需要给个？号）整一些购物车程序系统啥的，导致搜索一圈下来没看到几个可以接近于“开箱即用”的产品或是听上去使用较多的集成方案，导致在电商领域它的生态好像并不是发展的活跃。
这也可能是我个人的误解。
Saleor 是我所通过搜索查询到从看 Demo 和文档都觉得它的集成度（开箱可用程度）和可定制化说明做的较好的一个方案，也看到几乎没有人做中文文档的翻译，既然我想深入了解，那就从翻译开始吧，顺便也积累下可用的中文资料。
如果有缘人能看到，也是一种幸运了。</description>
    </item>
    
    <item>
      <title>Saleor 01: 入门 - 在 macOS 上安装</title>
      <link>https://jeremyyin.com/saleor/getting-started/01_installation-macos/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/getting-started/01_installation-macos/</guid>
      <description>准备工作 在正式运行 Saleor 之前，需要在电脑上安装一些额外软件。
Node.js 建议是 Version 8 或更高版本。
Node.js downloads page
PostgreSQL 运行 Saleor 需要 PostgreSQL version 9.4 或更高版本。
PostgreSQL download page
你一定要记住在安装的时候所设定的管理员密码。
Command Line Tools for Xcode 下载并安装最新版本的 &amp;ldquo;Command Line Tools (macOS 10.x) for Xcode 9.x&amp;rdquo;.
Downloads for Apple Developers page
然后运行：
$ xcode-select --install Homebrew 运行下面的命令安装 Homebrew:
$ /usr/bin/ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34; Python 3 使用 Homebrew 安装最新版本的 Python 3:
$ brew install python3 Git 使用 Homebrew 安装 Git:</description>
    </item>
    
    <item>
      <title>Saleor 02: 入门 - 在 Windows 上安装</title>
      <link>https://jeremyyin.com/saleor/getting-started/02_installation-windows/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/getting-started/02_installation-windows/</guid>
      <description>我们在 64-bit Windows 系统上进行安装
准备工作 在正式运行 Saleor 之前，需要在电脑上安装一些额外软件。
Python 下载最新的 3.6 版 Windows 安装包，然后根据说明进行安装。
Python download page
记得勾选 &amp;ldquo;Add Python 3.6 to PATH&amp;ldquo;
Node.js 建议是 Version 8 或更高版本。
Node.js downloads page
记得勾选 &amp;ldquo;Add to PATH&amp;ldquo;
PostgreSQL 运行 Saleor 需要 PostgreSQL version 9.4 或更高版本。
PostgreSQL download page
你一定要记住在安装的时候所设定的管理员密码。
GTK+ 下载 64-bit Windows installer
记得勾选 &amp;ldquo;Set up PATH environment variable to include GTK+&amp;ldquo;
Compilers 下载并安装最新版本的 Visual C++ build tools.
安装  克隆这个仓库 （或是使用你自己的副本）：</description>
    </item>
    
    <item>
      <title>Saleor 03: 入门 - 在 Linux 上安装</title>
      <link>https://jeremyyin.com/saleor/getting-started/03_installation-linux/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/getting-started/03_installation-linux/</guid>
      <description>如果你偏向于使用容器服务或者是对配置 PostgreSQL, Redis and Elasticsearch 存在问题，可以尝试 Using Docker for Development 相关教程。
准备工作 在正式运行 Saleor 之前，需要在电脑上安装一些额外软件。
Python 3 Saleor 建议使用 Python 3.4 或者更高版本。大多数 Linux 系统都有一个内置已经安装好的版本，但是如果不是，那就要去了解下如何安装 Python 3.6.
Node.js 建议是 Version 8 或更高版本。
查看 installation instructions.
Note  Debian 和 Ubuntu 用户使用系统安装包进行安装 Node.js 的话依然还需要安装 nodejs-legacy

PostgreSQL 运行 Saleor 需要 PostgreSQL version 9.4 或更高版本。
PostgreSQL download page
你一定要记住在安装的时候所设定的管理员密码。
GTK+ 有一些功能，比如“创建 PDF”，需要额外的系统库支持。
Debian / Ubuntu Debian 9.0 Stretch 或以上, Ubuntu 16.04 Xenial 或以上:</description>
    </item>
    
    <item>
      <title>Saleor 04: 入门 - 设置</title>
      <link>https://jeremyyin.com/saleor/getting-started/04_configuration/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/getting-started/04_configuration/</guid>
      <description>我们是 12factor 方法和可移植代码的粉丝， 所以你仅仅使用环境变量就可以设置 Saleor 的大多数配置项。
环境变量  ALLOWED_HOSTS
控制 Django&amp;rsquo;s allowed hosts 设置，默认是 localhost。使用英文逗号分隔多个值。
 CACHE_URL or REDIS_URL
缓存数据库地址，默认是系统内存。我们推荐使用 Redis，Heroku 的 Redis 会自动导出这个配置。
  Example: redis://redis.example.com:6379/0
Warning

如果你计划使用不止一个 WSGI 进程（或运行多个服务器/容器），则需要使用共享缓存服务器。否则，每个进程将拥有自己的每个用户会话的版本，这将导致用户被注销并丢失购物车。

 DATABASE_URL
默认是本地 PostgreSQL 实例。查看 Using Docker for Development 了解如何在 Docker container 里面运行本地数据库。  大多数 Heroku 的数据库都会自动导出这个设置。
Example: postgres://user:password@psql.example.com/database
 DEBUG
控制 Django&amp;rsquo;s debug mode 默认是 True
 DEFAULT_FROM_EMAIL
电子邮件的默认发件人
 EMAIL_URL
电子邮件网关地址。默认是打印输出所有信息到终端。
  Example: smtp://user:password@smtp.</description>
    </item>
    
    <item>
      <title>Saleor 05: 入门 - 创建一个管理员账户</title>
      <link>https://jeremyyin.com/saleor/getting-started/05_superuser/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/getting-started/05_superuser/</guid>
      <description>Saleor 是基于 Django 开发的，所以你可以使用下面的命令来创建管理员账户
$ python manage.py createsuperuser 按照提示提供您的电子邮件地址和密码。
然后你就可以启动本地服务并访问 http://localhost:8000/dashboard/ 登录到后台管理界面。
请注意，以这种方式创建用户会使其成为“超级用户”状态，这意味着无论分配给哪个组，它们都具有所有权限。</description>
    </item>
    
    <item>
      <title>Saleor 06: 入门 - 调试工具</title>
      <link>https://jeremyyin.com/saleor/getting-started/06_dev-tools-2/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/getting-started/06_dev-tools-2/</guid>
      <description> 我们内建了一些调试工具。
Django debug toolbar 如果 Django 是运行在 debug 模式下，Django Debug Toolbar 就是开启的。
Silk Silk 开启与否可以通过环境变量来控制
 ENABLE_SILK
控制 django-silk. 默认是 False   设置环境变量  $ export ENABLE_SILK=&amp;#39;True&amp;#39;  从 requirements_dev.txt 安装库:  $ python -m pip install -r requirements_dev.txt  重启服务  </description>
    </item>
    
    <item>
      <title>Saleor 07: 入门 - 测试数据</title>
      <link>https://jeremyyin.com/saleor/getting-started/07_example-data/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/getting-started/07_example-data/</guid>
      <description>如果您想要一些数据来测试您的新店面，您可以使用示例产品和订单填充数据库：
$ python manage.py populatedb</description>
    </item>
    
    <item>
      <title>Saleor 08: 开发定制 - 使用 Docker 进行开发</title>
      <link>https://jeremyyin.com/saleor/customization/08_docker/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/customization/08_docker/</guid>
      <description>使用Docker构建软件，您可以运行和测试代码，而无需担心外部依赖性，如缓存服务器和数据库。
Warning
以下设置仅用于本地开发。请参阅 Docker 以获取 Docker 在生产环境的使用说明。
本地准备工作 在执行以下步骤之前，您需要安装 Docker 和 docker-compose 。
要构建资源库，您需要 node 和 webpack module bundler
Warning
我们的配置公开了 PostgreSQL，Redis 和 Elasticsearch 端口。如果由于端口冲突而运行此 Docker 文件时遇到问题，可以从 docker-compose.yml 文件中删除关于 &amp;lsquo;ports&amp;rsquo; 的部分。
用法  安装 JavaScript 依赖：  $ npm install  准备静态资源库 assets:  $ npm run build-assets  创建 email:  $ npm run build-emails  使用 docker-compose 创建容器：  $ docker-compose build  准备数据库：  $ docker-compose run web python manage.</description>
    </item>
    
    <item>
      <title>Saleor 09: 开发定制 - 自定义模版</title>
      <link>https://jeremyyin.com/saleor/customization/09_templates/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/customization/09_templates/</guid>
      <description>商店前端模版默认是基于 [Bootstrap 4
你可以在 /templates/ 文件下找到全部文件。</description>
    </item>
    
    <item>
      <title>Saleor 10: 开发定制 - 自定义邮件</title>
      <link>https://jeremyyin.com/saleor/customization/10_emails/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/customization/10_emails/</guid>
      <description> 发送邮件 邮件是使用 Django-Templated-Email 进行发送的。
自定义邮件模版 电子邮件模板在 templates/templated_email 中，它有两个子目录。 source 包含 *.email 和 *.mjml 文件，彼此相邻，按应用程序名称分组。 这些 MJML 文件被编译为 *.html 并放入 compiled 目录。
在 *.email 中的普通电子邮件通过引用编译的 *.html 文件来包含 HTML 版本。
编译 MJML 源电子邮件使用 MJML ，并且在使用之前必须编译为HTML。
要编译邮件的话就运行命令：
$ npm run build-emails</description>
    </item>
    
    <item>
      <title>Saleor 11: 开发定制 - 自定义 CSS 和 JavaScript</title>
      <link>https://jeremyyin.com/saleor/customization/11_frontend/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/customization/11_frontend/</guid>
      <description>所有的静态资源文件都在 /saleor/static/ 的子目录下面。
样式表是使用 Sass 写的，使用 postcss 和 autoprefixer 来支持跨浏览器兼容性。
JavaScript 代码是按 ES2015 标准写的， 使用 Babel 进行转换和补充浏览器兼容性。
一切都是使用 webpack module bundler 进行编译。
最终生成的文件都输出到 /saleor/static/assets/ ，你不要手动去编辑它们。
webpack 会自动监测到本地文件的修改，这在开发过程中有非常大的好处。 在调试阶段，这同时开启非常有用的 source maps
To run webpack in watch mode run:
$ npm start Warning
使用上面这种方式创建的文件并不是完全可以在生产环境下直接使用的，要使用下面的命令进行操作：
$ npm run build-assets --production</description>
    </item>
    
    <item>
      <title>Saleor 12: 开发定制 - 编写 Python 代码</title>
      <link>https://jeremyyin.com/saleor/customization/12_backend/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/customization/12_backend/</guid>
      <description>管理依赖库 为了保证可重复安装，所有项目依赖性都使用 pip-tools 进行管理。 项目的直接依赖关系列在 requirements.in 中，并且运行 pip-compile 生成所有版本固定的 requirements.txt 。
我们建议您使用此工作流程并在版本控制下保留 requirements.txt ，以确保所有计算机和环境都运行完全相同的代码。</description>
    </item>
    
    <item>
      <title>Saleor 13: 开发定制 - 国际化</title>
      <link>https://jeremyyin.com/saleor/customization/13_i18n/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/customization/13_i18n/</guid>
      <description> 从 Transifex 获取翻译文件 首先要确保你已经安装了 Transifex 命令行客户端:
$ pip install transifex-client 然后使用 pull 命令获取翻译文件:
$ tx pull Note
要为新创建的翻译建立目录你需要在使用 tx pull 命令的时候带上 --all 标志。
编译消息目录 要想看到 Django 的翻译，这一步是必须要的.
$ python manage.py compilemessages 提取消息进行翻译 这将使用代码中显示的消息更新英文文件。
对于后端代码和模板：
$ python manage.py makemessages -l en --extension=email,html,py,txt --ignore=&amp;#34;templates/templated_email/compiled/*&amp;#34; 对于 JavaScript 代码：
$ python manage.py makemessages -l en -d djangojs --ignore=&amp;#34;_build/*&amp;#34; --ignore=&amp;#34;node_modules/*&amp;#34; </description>
    </item>
    
    <item>
      <title>Saleor 14: 开发定制 - 运行测试</title>
      <link>https://jeremyyin.com/saleor/customization/14_tests/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/customization/14_tests/</guid>
      <description>在对代码进行任何永久更改之前，应确保它们不会破坏现有功能。
该项目目前只包含很少的前端代码，因此测试套件仅涵盖后端代码。
要运行后端测试，请使用 pytest:
$ py.test 您还可以测试所有支持的 Django 和 Python 版本。 这通常只有在您想要将更改回送给 Saleor 时才需要。 要做到这一点，你可以使用 Tox:
$ tox</description>
    </item>
    
    <item>
      <title>Saleor 15: 开发定制 - 持续集成</title>
      <link>https://jeremyyin.com/saleor/customization/15_ci/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/customization/15_ci/</guid>
      <description>商店附带一个可工作的 CircleCI 配置文件。 要使用它，请登录您的 CircleCI 帐户并启用您的存储库。</description>
    </item>
    
    <item>
      <title>Saleor 16: 开发定制 - 与 PyPy 3.5 配合使用</title>
      <link>https://jeremyyin.com/saleor/customization/16_pypy/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/customization/16_pypy/</guid>
      <description>Saleor 可以很好地与 PyPy 3.5 配合使用，并且在需要额外的性能时可以使用它。
默认的 PostgreSQL 驱动程序与 PyPy 不兼容，所以您需要用基于 cffi 的驱动程序替换它。
请参阅 psycopg2cffi 提供的安装说明。</description>
    </item>
    
    <item>
      <title>Saleor 17: 参与我们 - 编辑器配置</title>
      <link>https://jeremyyin.com/saleor/contributing/17_editorconfig/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/contributing/17_editorconfig/</guid>
      <description>EditorConfig 是一个标准配置文件，旨在确保跨多种编程环境的一致风格。
Saleor 的存储库包含一个 .editorconfig file 文件，它描述了我们的格式要求。
大多数编辑器和IDE都直接或通过插件支持该文件。 请参阅 list of supported editors and IDEs 以获取相关说明。
请确保您的编程环境尊重此文件的内容，并且您将自动获得正确的缩进，编码和行尾。</description>
    </item>
    
    <item>
      <title>Saleor 18: 参与我们 - 编码风格</title>
      <link>https://jeremyyin.com/saleor/contributing/18_coding-style/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/contributing/18_coding-style/</guid>
      <description>Python 始终遵循 PEP 8 ，但请记住，一致性非常重要。
String Literals 优先使用单引号加双引号，除非字符串本身包含需要不必要地转义的单引号。
Wrapping Code When wrapping code follow the “hanging grid” format:
some_dict = { &amp;#39;one&amp;#39;: 1, &amp;#39;two&amp;#39;: 2, &amp;#39;three&amp;#39;: 3}some_list = [ &amp;#39;foo&amp;#39;, &amp;#39;bar&amp;#39;, &amp;#39;baz&amp;#39;] Python是一种基于缩进的语言，我们相信漂亮，可读的代码比保存一行 git diff 更重要。 即使 Django 项目似乎鼓励这种编程风格，请避免使用括号，括号，方括号或悬挂逗号。下面这种是错误的做法：
this_is_wrong = { &amp;#39;one&amp;#39;: 1, &amp;#39;two&amp;#39;: 2, &amp;#39;three&amp;#39;: 3, } 请在括号后立即打破多行代码，并避免依赖精确数量的空格进行对齐，下面这种做法也是错误的：
also_wrong(&amp;#39;this is hard&amp;#39;, &amp;#39;to maintain&amp;#39;, &amp;#39;as it often needs to be realigned&amp;#39;) Linters 使用 isort 来维护一致的进口。
使用 pylint 与 pylint-django 插件来捕获代码中的错误。</description>
    </item>
    
    <item>
      <title>Saleor 19: 参与我们 - 命名约定</title>
      <link>https://jeremyyin.com/saleor/contributing/19_naming/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/contributing/19_naming/</guid>
      <description>为了保持一致的代码结构，我们在命名文件时遵循一些规则。
Python Modules 试着让名字反映文件的功能。 如果可能的话，避免使用通用文件名，例如 utils.py.
Django Templates 使用下划线作为字词分隔符。
Static Files 使用破折号分隔单词，因为它们最终会成为 URL 的一部分。</description>
    </item>
    
    <item>
      <title>Saleor 20: 架构 - 处理钱的金额</title>
      <link>https://jeremyyin.com/saleor/architecture/20_money/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/architecture/20_money/</guid>
      <description>Saleor 使用 Prices 和 django-prices 库去存储、计算和显示金额、价格与范围。
默认货币 所有价格都输入并存储在由 [DEFAULT_CURRENCY 设置] 控制的单一默认货币中。Saleor 可以以用户本地货币显示价格 （参阅 [Open Exchange Rates integration]），但所有采购均以默认货币收取。
Warning
货币不存储在数据库中。在生产环境中更改默认货币不会重新计算任何现有订单。所有数字将保持不变，并且会被错误地显示为新货币。
Money 和 TaxedMoney 在 Saleor 的代码库中，金额存在 Money 或 TaxedMoney 实例。
Money 是以特定货币表示金额的类型：100 USD 是由 Money(100, &amp;lsquo;USD&amp;rsquo;) 表示。这种类型不包含对商业有用的任何附加信息，但是与 Decimal 不同，它实施保护和检查以计算和比较货币价值。Money amounts 使用 MoneyField 存储在 model 上，MoneyField 提供货币和储值金额的自己的安全检查。如果您需要使用 Money 对象的 Decimal （十进制数字），您可以在 amount 属性中找到它。
Products （产品）和 shipping methods prices （运输方式价格）使用 MoneyField 进行存储，并假定为 gross amounts （总额）。然后使用 TaxedAmount（net = item.price，gross = item.price）方法将这些金额转换为 TaxedMoney 对象，然后在解决项目的最终价格（税前和折扣前）进行转换。</description>
    </item>
    
    <item>
      <title>Saleor 21: 架构 - 产品结构</title>
      <link>https://jeremyyin.com/saleor/architecture/21_products/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/architecture/21_products/</guid>
      <description>在为您的商店填充产品之前，我们需要介绍 3 种产品概念：产品类型 product types ，产品 products ，产品变体 product variants 。
概述 设想你有一家书店。 你的其中一个产品 products 一本名为“Saleor 简介”的书。
这本书的封面有分为硬壳和软壳，所以会有两种产品变体 product variants 。
封面类型是在我们的商店中创建单独变体的唯一属性，因此我们使用“Book”作为产品类型 product type ，为它启用变体并使用“Cover type”作为变体属性 variant attribute 。
Class Diagram 产品变体（Product Variants） 变体是你店里最重要的物品。所有购物车和库存操作都使用变体。即使产品没有多种变体，商店也会在后台创建一个。
产品（Products） 介绍几个产品变体 product variants 的常见细节。当商店显示类别视图时，列表中的项目是不同的产品 products 。如果变体没有重写属性（例如：价格），则从产品 products 中获取默认值。
 available_on  在此日期之前，该产品未在店面中列出，且用户不可用。
 is_featured  特色产品显示在首页
产品类型（Product Types） 将类型看作您的产品的模板。多个 产品 products 可以使用相同的产品类型 product type。
 product_attributes  所有 产品变体 product variants 之间共享的属性。例如：发布者，所有书籍变体都由同一家公司出版。
 variant_attributes  这是什么区别不同的 变体 variants 。例如：封面类型，你的书可以用硬或软的封面。</description>
    </item>
    
    <item>
      <title>Saleor 22: 架构 - 缩略图</title>
      <link>https://jeremyyin.com/saleor/architecture/22_thumbnails/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/architecture/22_thumbnails/</guid>
      <description>Saleor 使用 VersatileImageField 替换了 Django 的 ImageField 。出于性能原因，在非调试模式下，缩略图由工作者的任务系统预先生成，在保存实例后触发。访问丢失的图像将导致404错误。
在调试模式下，按需生成缩略图。
手动生成产品缩略图 为所有 ProductImage 实例创建缺失的缩略图。
$ python manage.py create_thumbnails 删除图像 Image 实例不会自动删除图像格式，主图像也不会自动删除。有关删除图像的更多信息，请参见 VersatileImageField 文档</description>
    </item>
    
    <item>
      <title>Saleor 23: 架构 - 库存管理</title>
      <link>https://jeremyyin.com/saleor/architecture/23_stock/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/architecture/23_stock/</guid>
      <description>每个产品型号都有一个库存单位（SKU）。
每个变体保存了关于“数量”的相关信息，总库存数量 quantity 包括分配给已经生成的订单的已分配数量 quantity allocated 和可用数量 quantity available 。
Example: 有五盒鞋子。其中三个已经出售给客户，但尚未处理发货。总库存数量 quantity 为 5，已分配数量 quantity allocated 为 3，可用数量 quantity available 为 2。
每个变体也有一个*成本价格*（您的商店必须支付才能拿得到货的价格，可以理解为采购价）。
产品可用性（Product Availability） 如果一个*变体*还有未分配的库存数量，则它就表示是*有货*的。
可订购的最高数量是产品变体中的可用数量 quantity available。
为新订单分配库存（Allocating Stock for New Orders） 一旦下订单，完成每个订单行所需的数量立即标记为*已分配*。
Example: 一位顾客又下了一盒鞋子的订单。总库存数量 quantity 是 5, 已分配数量 quantity allocated 现在就是 4 ，然后可用数量 quantity available 就变成了 1.
发货后减少库存（Decreasing Stock After Shipment） 一旦交付组（可以理解为发货单）被标记为发货，这个发货单里面的每条记录所对应的产品变体将手头的数量和分配的数量都减少了出货的数量。
Example: A 仓库的两箱鞋子被运送给客户。总库存数量 quantity 现在就是 3，已分配数量 quantity allocated 则变为 2，可用数量 quantity available 依然是 1。</description>
    </item>
    
    <item>
      <title>Saleor 24: 架构 - 订单管理</title>
      <link>https://jeremyyin.com/saleor/architecture/24_orders/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/architecture/24_orders/</guid>
      <description>订单是在客户完成结账流程后创建的。订单对象本身仅包含客户订单的一些基本信息。
履行（Fulfillment）（可以理解为发货与发货单） 履行代表一组带有相应跟踪编号的装运物品。履行是由商店经营者创建的，以便在所订购的订单中标记选定的产品已被履行。
有两种可能的履行状态：
 NEW
新创建履行的默认状态。
 CANCELED
履行由商店操作员取消。这一行动是不可逆转的。
  订单状态（Order statuses） 根据其履行情况，有四种可能的订单状态：
 UNFULFILLED
没有与订单相关的履行或每一个履行都被取消。需要店铺操作员采取行动才能继续订单处理。
可以理解为还未发货
 PARTIALLY FULFILLED
有一些履行 FULFILLED 状态与订单有关。需要店铺操作员采取行动才能继续订单处理。
可以理解为部分发货
 FULFILLED
每个订单行都在现有履行中完成。订单不需要店铺经营者的进一步行动。
可以理解为发货完成
 CANCELED
订单已被取消。每个履行（如果有的话）都具有 CANCELED 状态。订单不需要店铺经营者的进一步行动。
  还有 DRAFT （草稿）状态，用于从订单后台新创建并尚未发布的订单。这个操作一般用于客服售后流程。</description>
    </item>
    
    <item>
      <title>Saleor 25: 架构 - 国际化</title>
      <link>https://jeremyyin.com/saleor/architecture/25_i18n/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/architecture/25_i18n/</guid>
      <description>默认情况下，语言和语言环境是根据 Web 浏览器提供的首选项列表确定的。GeoIP 用于确定访问者的国家和当地货币。
Note
Saleor 使用 Transifex 协调翻译。如果您希望提供帮助，请前往 translation dashboard
所有翻译都由社区处理。所有翻译团队都是开放的，欢迎所有人申请一种新语言。
翻译（Translation） Saleor 使用 gettext 翻译。这是翻译软件的行业标准，也是翻译 Django 应用程序的最常用方法。
Saleor 的店面和管理后台都准备好翻译。他们使用单独的翻译域名，可以单独翻译。所有翻译都提供准确的上下文描述，使翻译更容易。
目前无法翻译数据库内容（如产品说明），但计划在未来版本中使用。
本土化（Localization） 数据格式（Data formats） Saleor使用 Babel 作为 Unicode 的 CLDR 库的接口，以提供准确的数字和日期格式以及适当的货币名称。
地址表格（Address forms） Google’s address format database 用于提供特定于语言环境的地址格式和表单。它还负责地址验证，因此您不必知道如何向中国递送包裹或阿拉伯联合酋长国是否使用邮政编码（他们不会）。
货币转换（Currency conversion） Saleor可以使用货币汇率数据来显示访客本地货币的价格估算值。请参阅 Open Exchange Rates 以了解如何设置 Open Exchange Rates。
电话号码格式（Phone numbers format） Saleor 使用 Google’s libphonenumber library 来确保提供的数字是正确的。您需要选择前缀并单独键入号码。无论选择哪个国家，您都可以输入属于任何其他国家/地区格式的电话号码。</description>
    </item>
    
    <item>
      <title>Saleor 26: 架构 - 搜索</title>
      <link>https://jeremyyin.com/saleor/architecture/26_search/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/architecture/26_search/</guid>
      <description>Saleor 有两种搜索机制。
默认是使用 PotsgreSQL。这是一个相当通用的解决方案，不需要任何额外的资源。
如果 Elasticsearch 服务器可用，则可以启用更复杂的搜索后端。Elasticsearch 提供了许多高级功能，例如提高查询的相关性或“more like this”的查询。查看 Elasticsearch官方网站，了解更多关于其功能的信息。请注意，启用Elasticsearch 后端目前不支持 Saleor 中的任何其他功能。
有关安装和配置说明，请参阅 Elasticsearch。</description>
    </item>
    
    <item>
      <title>Saleor 27: 架构 - 支付</title>
      <link>https://jeremyyin.com/saleor/architecture/27_payments/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/architecture/27_payments/</guid>
      <description>支持的网关（Supported Gateways） Saleor 使用 django-payments 库来处理付款。
默认配置使用*虚拟*后端。这意味着开发人员可以轻松模拟不同的付款结果。
以下是支持的支付提供商列表：
 Authorize.Net Braintree Coinbase Cybersource Dotpay Google Wallet PayPal Sage Pay Sofort.com Stripe  请注意，此列表仅供参考。请咨询 django-payments documentation 以获得最新的列表和说明。
Note
所有付款后端默认使用沙盒模式。这对于开发非常有用，但确保在部署到生产服务器时使用生产模式。
3-D Secure 3-D Secure 是一种卡保护协议，允许商家部分减轻欺诈责任。实际上，它大大降低了退款的可能性。
Saleor 支持 3-D Secure 但是否使用取决于付款处理器和正在使用的卡。
欺诈保护（Fraud Protection） 一些支付后端提供了自动欺诈保护启发式。如果此类信息可用，Saleor 会将其显示在订单管理面板中。
授权和捕获（Authorisation and Capture） 部分支付后端支持预授权支付。详情请参阅 django-payments documentation。
授权和捕获是一个两步过程。
首先，资金被锁定在付款人的账户上，但不会转移到您的银行。
然后根据提供商和卡的类型，您可能需要几天到一个月的时间才从卡上进行扣钱，金额不超过授权金额。
当订单准备好后才能确定准确的价格时，这非常有用。如果您的企业更喜欢手动筛选企图欺诈的订单，这也很有用。
使用预授权付款查看订单时，Saleor 将提供选项以捕捉或释放资金。
退款（Refunds） 您可以针对所有收取的付款进行部分或全部退款。当您修改订单并删除 Saleor 将提供的物品时，系统会自动发出部分退款。</description>
    </item>
    
    <item>
      <title>Saleor 28: 架构 - 网站设置</title>
      <link>https://jeremyyin.com/saleor/architecture/28_settings/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/architecture/28_settings/</guid>
      <description>*网站设置*模块允许您从管理后台更改常见的商店设置，如店铺名称或域名。通过从 SITE_SETTINGS_ID 变量中选择 pk 确定设置对象。
情境处理器 感谢 saleor.site.context_processors.settings 您可以通过 settings 变量访问模板中的*网站设置*。</description>
    </item>
    
    <item>
      <title>Saleor 29: 架构 - 页面</title>
      <link>https://jeremyyin.com/saleor/architecture/29_page/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/architecture/29_page/</guid>
      <description>设置自定义页面 您可以在后台管理的“页面”（Pages）菜单中设置页面，如“关于我们”或“重要通告！”。请注意，如果您不是管理员，则需要加入拥有相应权限的用户组。
在店面中引用页面 如果您想要在店面中添加最近创建的页面的链接，则只需将以下代码放入：
&amp;lt;a href=&amp;#34;{% url &amp;#34;page:details&amp;#34; slug=&amp;#34;terms-of-service&amp;#34; %}&amp;#34;&amp;gt;服务条款&amp;lt;/a&amp;gt; 在相应的模板中。</description>
    </item>
    
    <item>
      <title>Saleor 30: 集成 - 搜索引擎优化（SEO）</title>
      <link>https://jeremyyin.com/saleor/integrations/30_seo/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/integrations/30_seo/</guid>
      <description>在某些方面，Saleor 会自动处理搜索引擎如何查看和索引您的产品，开箱即用。
站点地图（Sitemaps） 在 /sitemap.xml URL 下，这个可访问的特殊资源以所有主要搜索引擎最易于解析的 Sitemaps XML 格式提供您网站上的产品、类别和集合的最新列表。
元标记（Meta Tags） Meta 关键字并未被使用，因为它被引入后的这几年被滥用，因为它们被所有主要搜索引擎忽略。
元描述将被设置为产品的描述字段。这不会影响搜索引擎的排名，但会影响显示的搜索结果中的文本片段。
机器人元标记（Robots Meta Tag） （这里机器人一般指搜索引擎的自动化爬虫。）
机器人 meta 标签利用特定于页面的方式来控制如何将单个页面编入索引并提供给搜索结果中的用户。
我们限制了信息中心管理面板的抓取和索引，无内容页面（例如购物车，注册，登录）不会被抓取。
结构化数据（Structured Data） 主页和产品页面包含 JSON-LD 结构化数据 格式的语义描述。
它不直接影响搜索引擎排名，但它允许搜索引擎更好地理解数据（“这是一款产品，它是可用的，它的价格为10美元）”。
它允许像谷歌这样的搜索引擎显示产品照片，价格，可用性，评级等，以及他们的搜索结果。
Nofollow 链接（Nofollow links） 搜索引擎抓取工具无法在您的网站上登录或注册成为会员，也没有理由邀请他们按照“在此注册”或“登录”链接进行操作，因为这些链接几乎没有任何有价值的内容。
这将优化抓取工具在网站上花费的时间，从而让它有时间去索引更多与内容相关的页面。</description>
    </item>
    
    <item>
      <title>Saleor 31: 集成 - 社交媒体优化（SMO）</title>
      <link>https://jeremyyin.com/saleor/integrations/31_smo/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/integrations/31_smo/</guid>
      <description>打开图表 为了更有效和高效参与社交媒体，我们在主页和所有的产品/类别中添加了 Open Graph Protocol 。
Open Graph meta 标签可以控制在社交媒体上分享页面时显示的内容（描述，标题，网址，照片等），从而将您的网页转变为社交图表中的丰富对象。</description>
    </item>
    
    <item>
      <title>Saleor 32: 集成 - 电子邮件标记</title>
      <link>https://jeremyyin.com/saleor/integrations/32_emailmarkup/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/integrations/32_emailmarkup/</guid>
      <description>Saleor 使用 schema.org 标记来突出显示电子邮件中最重要的信息，并允许用户轻松地与其进行交互。 订单确认电子邮件 将显示为交互式摘要卡片。
电子邮件标记是默认启用的，但在您 向Google注册 之前，您的客户不会看到它。</description>
    </item>
    
    <item>
      <title>Saleor 33: 集成 - Elasticsearch 搜索</title>
      <link>https://jeremyyin.com/saleor/integrations/33_elasticsearch/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/integrations/33_elasticsearch/</guid>
      <description>安装 Elasticsearch 搜索后端需要 Elasticsearch 服务器。为了开发目的，docker-compose 将创建一个运行Elasticsearch 服务器实例的 Docker 容器。
可以使用一组环境变量来配置集成。当您在 Heroku 上部署时，您可以使用提供 Elasticsearch 作为服务的附加组件。默认情况下，Saleor 使用Elasticsearch 5.4.3。
如果您正在其他地方部署，则可以使用以下服务之一：
  http://www.searchly.com/ https://www.elastic.co/cloud   环境变量  ELASTICSEARCH_URL或 BONSAI_URL 或 SEARCHBOX_URL  elasticsearch 引擎的网址。如果它是空的 - 搜索将不可用。例： https://user:password@my-3rdparty-es.com:9200
数据索引 Saleor 使用的Django Elasticsearch DSL 作为用于包装 Elasticsearch DSL 启用自动索引和同步。索引在文档文件中定义。请参考上述项目的文件以获得进一步的帮助。
初始搜索索引可以使用以下命令创建：
$ python manage.py search_index --rebuild 默认情况下，每次更改索引对象（产品，用户，订单）都会重新编制索引。
搜索集成架构 搜索后端使用 Elasticsearch DSL 在saleor / search / backends中查询定义。
为 elasticsearch 集成，店面和管理后台定义了两个后端。店面搜索仅使用店面索引进行产品搜索，管理后台后端也在用户和订单索引中执行其他搜索。
测试 搜索功能有两个级别的测试。Elasticsearch 查询的语法由后端的单元测试来保证，集成测试使用 VCR.py 来模拟外部通信。如果搜索逻辑被修改，请确保记录新的通信并相应地调整测试流程！Pytest将在 CI 的永久记录模式下运行 VCR 以确保没有尝试进行通信，因此请确保最新的卡带始终包含在您的存储库中。</description>
    </item>
    
    <item>
      <title>Saleor 34: 集成 - 谷歌分析</title>
      <link>https://jeremyyin.com/saleor/integrations/34_googleanalytics/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/integrations/34_googleanalytics/</guid>
      <description>由于欧盟法律规定，Saleor 不会默认使用任何追踪 cookie。
不过，我们使用 Google Analytics Measurement Protocol 支持服务器端 Google Analytics 。
这是使用 google-measurement-protocol ，不使用 cookie，但代价是不会报告无法追踪服务器端的东西，如地理定位和屏幕分辨率。
为了让它工作，你需要导出下面的环境变量：
 GOOGLE_ANALYTICS_TRACKING_ID  您的信息页的Google “跟踪 ID”。
 ​ ​  </description>
    </item>
    
    <item>
      <title>Saleor 35: 集成 - 谷歌零售</title>
      <link>https://jeremyyin.com/saleor/integrations/35_googleforretail/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/integrations/35_googleforretail/</guid>
      <description>Saleor 有用于生成产品 Feed 的工具，可用于 Google Merchant Center。最终文件被压缩成 CSV 并保存在 saleor.data_feeds.google_merchant.FILE_PATH 变量所指定的位置。
要生成 Feed 使用命令：
$ python manage.py update_feeds 建议定期运行此命令。
Merchant Center 很少有国家/地区相关设置，因此请在 Google 信息中心验证您的 Feed。您还可以在那里指定您的运费，这是许多国家/地区必需的 Feed 参数。在 Google Support pages 可以找到更多信息。
Google 所需的其中一项字段是*品牌*属性。Feed 生成器会在变体属性中对*品牌*或*发布商*进行检查（如果没有，则会去*产品*里面找）。
Feed 可以从这个网址下载：http://&amp;lt;yourserver&amp;gt;/feeds/google/</description>
    </item>
    
    <item>
      <title>Saleor 36: 集成 - 汇率转换</title>
      <link>https://jeremyyin.com/saleor/integrations/36_openexchangerates/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/integrations/36_openexchangerates/</guid>
      <description>这种整合将使您的客户能够以当地货币查看产品价格。当地价格仅作为估算提供，客户仍按商店的默认货币收费。
在开始之前，您需要一个 Open Exchange Rates account。除非您需要每天多次更新汇率，否则免费订阅计划应该足够了，当然也可以考虑为 Open Exchange Rates 提供的优质服务购买付费方案。首先去注册并创建一个“App ID”。
导出以下环境变量：
 OPENEXCHANGERATES_API_KEY  您商店的开放式汇率“应用程序ID”。
要更新汇率，至少每天运行一次以下命令：
$ python manage.py update_exchange_rates --all Note
Heroku 用户可以使用 Scheduler add-on 在预定义的时间每天自动调用该命令。</description>
    </item>
    
    <item>
      <title>Saleor 37: 部署 - Docker</title>
      <link>https://jeremyyin.com/saleor/deployment/37_docker/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/deployment/37_docker/</guid>
      <description>您需要先安装 Docker。
在构建镜像之前，请确保您准备好了用于生产环境的所有前端资源文件：
$ npm run build-assets --production $ npm run build-emails $ python manage.py collectstatic 然后使用 Docker 构建镜像：
$ docker build -t mystorefront .</description>
    </item>
    
    <item>
      <title>Saleor 38: 部署 - Heroku</title>
      <link>https://jeremyyin.com/saleor/deployment/38_heroku/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/deployment/38_heroku/</guid>
      <description>配置（Configuration） $ heroku create --buildpack https://github.com/heroku/heroku-buildpack-nodejs.git $ heroku buildpacks:add https://github.com/heroku/heroku-buildpack-python.git $ heroku addons:create heroku-postgresql:hobby-dev $ heroku addons:create heroku-redis:hobby-dev $ heroku addons:create sendgrid:starter $ heroku config:set ALLOWED_HOSTS=&amp;#39;&amp;lt;your hosts here&amp;gt;&amp;#39; $ heroku config:set NODE_MODULES_CACHE=false $ heroku config:set NPM_CONFIG_PRODUCTION=false $ heroku config:set SECRET_KEY=&amp;#39;&amp;lt;your secret key here&amp;gt;&amp;#39; Note
Heroku 的存储是不稳定的。这意味着应用程序的所有实例都将具有单独的磁盘，并且每次重新启动应用程序时都将丢失对本地磁盘所做的所有更改。最好的方法是使用 Amazon S3 等云存储。有关配置详细信息，请参阅 Storing Files on Amazon S3 。
部署（Deployment） $ git push heroku master 准备数据库（Preparing the Database） $ heroku run python manage.py migrate 更新货币汇率（Updating Currency Exchange Rates） 这需要定期运行。实现此目的的最佳方法是使用 Heroku 的调度程序服务（Heroku’s Scheduler service）。我们将其添加到我们的应用程序中：</description>
    </item>
    
    <item>
      <title>Saleor 39: 部署 - 在 Amazon S3 上存储文件</title>
      <link>https://jeremyyin.com/saleor/deployment/39_s3/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/deployment/39_s3/</guid>
      <description>如果您使用容器进行部署（包括 Docker 和 Heroku），您将希望避免将文件存储在容器的易失性文件系统中。此集成允许您将存储此类文件的任务委托给 Amazon’s S3 service。
基本配置  AWS_ACCESS_KEY_ID  您的AWS访问密钥。
 AWS_SECRET_ACCESS_KEY  您的AWS秘密访问密钥。
使用 S3 存储桶提供媒体文件 如果要存储和提供媒体文件，请设置以下环境变量以将 S3 用作媒体存储区：
 AWS_MEDIA_BUCKET_NAME  用于媒体文件的S3存储桶名称。
如果您打算为媒体S3存储桶使用自定义域，则可以将此环境变量设置为您的自定义 S3 媒体域：
 AWS_MEDIA_CUSTOM_DOMAIN  用于媒体存储区的 S3 自定义域。
Note
媒体文件是指通过管理后台上传的每个数据（产品图像，类别图像等）
使用 S3 存储桶提供静态文件 默认情况下，应用程序服务器将提供静态文件（例如显示页面所需的 CSS 和 JS 文件）。
如果你打算为你的静态文件使用 S3，请设置一个额外的环境变量：
 AWS_STORAGE_BUCKET_NAME  用于静态文件的 S3 存储桶名称。
如果您打算为静态 S3 存储桶使用自定义域，则可以将此环境变量设置为您的自定义 S3 域：
 AWS_STATIC_CUSTOM_DOMAIN  用于静态存储区的 S3 自定义域。</description>
    </item>
    
    <item>
      <title>Saleor 40: 操作指南 - 订单</title>
      <link>https://jeremyyin.com/saleor/guides/40_orders/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/guides/40_orders/</guid>
      <description>Saleor 提供了通过管理后台处理订单的功能。订单可以在管理后台的 Orders 选项卡中处理完成。
草稿订单 （Draft orders） 要创建草稿订单，首先您必须转到管理后台的 Orders 选项卡，然后选择现有订单列表上方可见的圆形 + 按钮。
这些订单可以完全编辑，直到通过点击创建订单确认。您可以修改订购商品、客户（也只是设置电子邮件）、账单和送货地址、送货方式及折扣。您应用的任何凭证都会导致自动订单重新计算，以适应每次订单实际状态的变化。
通过点击创建订单确认订单会将状态更改为未实现并禁用大部分编辑操作。您可以选择通过发送电子邮件通知客户 - 如果附加了任何 - 关于该订单。
将订单标记为已付款（Marking orders as paid） 在订单详情页面，如果需要，您可以手动将订单标记为已付款。此选项仅在未付款订单中可见，作为付款卡中的操作。
Warning
您将无法退还手动处理的付款。这是由于缺乏足够的数据来处理事务。</description>
    </item>
    
    <item>
      <title>Saleor 41: 操作指南 - 导航</title>
      <link>https://jeremyyin.com/saleor/guides/41_navigation/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/saleor/guides/41_navigation/</guid>
      <description>Saleor 提供了配置店面导航的功能。你可以在管理后台的 Navigation 选项卡中进行操作。
您可以在每个创建的菜单中添加最多 3 层菜单项。每个菜单项都可以通过传递额外的 URL 来指向包含 Category，Collection，Page 或外部网站的内部页面。
管理菜单项（Managing menu items） 要管理菜单项，首先您必须转到仪表板 Navigation 选项卡并选择要编辑的菜单。如果要管理嵌套的菜单项，可以上下浏览列出的菜单项。
要添加新菜单项，请选择 Add 菜单项列表上方可见的按钮。然后填写表格并点击 Create。
要编辑菜单项，请选择 Edit 列表上菜单项旁边可见的按钮或菜单项详细信息下方的按钮（如果您在菜单项详细信息视图内）。进行任何更改并单击。Edit menu item Update
要删除菜单项，请选择 Remove 列表上菜单项旁边可见的按钮或菜单项详细信息下方的按钮（如果您在菜单项详细信息视图内）。此操作将删除所有后代项目，并且不能撤消。Remove menu item
菜单项按菜单项列表中列出的顺序显示在店面上。您可以通过处理菜单项左侧的图标并将其拖动到另一个位置来重新排列它们。
管理菜单（Managing menus） 管理后台为您提供添加新菜单的功能。
一次可以有两个活动菜单（一个用于导航栏，另一个用于页脚，它们可以相同）。
当前分配的菜单可以通过仪表板的 Navigation 面板进行更改。
菜单默认呈现为垂直列表。你可以通过传递一个额外的 horizontal=True 参数来改变它。带有嵌套项目的水平菜单在桌面上显示为下拉菜单。</description>
    </item>
    
    <item>
      <title>开始翻译一个文档：Saleor</title>
      <link>https://jeremyyin.com/post/2018-04-19-%E5%BC%80%E5%A7%8B%E7%BF%BB%E8%AF%91%E4%B8%80%E4%B8%AA%E6%96%87%E6%A1%A3saleor/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2018-04-19-%E5%BC%80%E5%A7%8B%E7%BF%BB%E8%AF%91%E4%B8%80%E4%B8%AA%E6%96%87%E6%A1%A3saleor/</guid>
      <description>这篇文章要在10分钟内写完。
今晚上开始着手翻译关于 Saleor 的文档，它是一个购物车程序，说它是个程序其实到也不完全是，准确说应该是它提供了一个整体参考方案，选用几个先进的不同产品进行组合，搭建起这么一个东西，相比其它一般性的购物车程序，我第一眼看过去就喜欢上它，demo 足够漂亮，响应速度也非常不错。
再仔细看过了它所使用的功能组件和工具，都走在技术发展前沿，这点很不错，这表示你是在为未来而努力。
我英文不咋滴，不过经过这一两年的接触，技术类的英文文档基本能看懂个大概意思，个别不懂的借助下词典工具或者翻译工具，比如系统自带词典和 Google 翻译。
如今这个时代，语言不会是最大的障碍。
今天完成了前面一些些，已经在小站放出来了，有兴趣可以看看，翻译可能存在一些问题，欢迎拍砖。
好了，到这就发吧。</description>
    </item>
    
    <item>
      <title>小站构建工具已成功切换到 Hugo</title>
      <link>https://jeremyyin.com/post/2018-04-18-%E5%B0%8F%E7%AB%99%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E5%B7%B2%E6%88%90%E5%8A%9F%E5%88%87%E6%8D%A2%E5%88%B0-hugo/</link>
      <pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2018-04-18-%E5%B0%8F%E7%AB%99%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E5%B7%B2%E6%88%90%E5%8A%9F%E5%88%87%E6%8D%A2%E5%88%B0-hugo/</guid>
      <description>最开始，我这使用的是 Jekyll 来处理 Markdown 文件生成网站文件。
前些时候，我筹备给它换到使用 Hugo 来处理。其中的一个主要原因，是因为：
 我想每个类别存一个文件夹，比如可以单独归类的：Python、……；不能归类的：其它杂碎的文章…… 如果需要修改某一个目录的名称，或是重新为某一批文章进行归类整理，我不想要去每一个 .md 文件里去逐个修改，虽然存在可能我写个 .py 脚本来处理这个事情，但是始终不是个很好的操作。  出于我在想把一些可独立成文件夹的东西搬进来存着，比如一些工具的文档什么的，所以这个独立文件夹存储的确实很明确，所以就着手进行了。
然后，结果有些东西就被我搞砸了，却没能有立即的完善解决方案和工具可用。
不过现在终于弄好了，其实比想象中的更加容易些，没那么复杂了，总体上有这么几点拿出来说道说道的。
首先我们使用反向推导的逻辑来思考如果需要修复搜索服务需要哪些东西：
 Algolia 的 API 是最终我们可操作更新索引内容的工具，有 Python 版的官方包，直接可接入基础的几个 API 操作，测试完成 在利用它 API 更新数据之前我们需要有数据，这个数据是什么，它其实是一个 json 文件，一个包含了多个文章字段索引内容的 list 那么就是如何得到这个 json 文件的事情了，自己写个工具来生成？这也是我曾考虑过的，然而其实后来发现有更好的方案，Hugo 支持多种模版输出，而其中便包含了可以输出 json 的方式，只要定义一个模版页面即可，而这个模版页面，自己贸然写可能有点难度，但是如果搜一搜，其实有人家写好的可以借鉴使用 那就是测试利用这个 json 模版输出 json 内容的问题了  所以接下来测试了几番，为什么是几番，因为有些需求需要自己处理下，比如：
 有些不需要索引的页面需要去除 为了方便查看本次更新要对 json 文件进行二次处理，排序等等 字段命名是否合理，要改的就改  这些小问题都是 Python 直接操作会很方便，所以写个脚本来操作，加入 sh 文件里面使得在构建的时候就顺便自动也帮忙处理下 json 文件，确认没啥问题再更新 Algolia 索引数据，完美完成。
当然在逐个步骤尝试的过程中还有遇到一些其它的问题，比如到底应该调用 addObjects add_objects 还是 update_objects save_objects 等等这些细节，不过这个去翻翻 Algolia 的文档就能明确的到答案的啦。</description>
    </item>
    
    <item>
      <title>我是如何搞砸了本站搜索服务的</title>
      <link>https://jeremyyin.com/post/2018-04-13-%E6%88%91%E6%98%AF%E5%A6%82%E4%BD%95%E6%90%9E%E7%A0%B8%E4%BA%86%E6%9C%AC%E7%AB%99%E6%90%9C%E7%B4%A2%E6%9C%8D%E5%8A%A1%E7%9A%84/</link>
      <pubDate>Fri, 13 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2018-04-13-%E6%88%91%E6%98%AF%E5%A6%82%E4%BD%95%E6%90%9E%E7%A0%B8%E4%BA%86%E6%9C%AC%E7%AB%99%E6%90%9C%E7%B4%A2%E6%9C%8D%E5%8A%A1%E7%9A%84/</guid>
      <description>上一篇简单提到，我上线了本站的站内搜索服务：Algolia，本来还写了有一些些的，然而，由于我所使用的 Markdown 编辑器 Typora 的问题，在我主动按下 Command + S 的时候有较高概率会触发崩溃（按照默认的设定直接关闭文件就是自动保存，可是人总是想更保险一点是吧，可结果……），所以，当时崩溃又写了些，写了些又崩溃，然后又写了些，又崩溃，又只要仓促写了些，毕竟大半夜的还是要睡觉的。
Typora 最近又更新了好几次，刚还遇到不能回删文字的情况，可能还是系统兼容问题吧，希望工程师们能有精力尽快完成修复了。
今天，我有意识控制不去按 Command + S，其实在 macOS 的逻辑里，好多的软件都默认是自动保存的，不过还是有一些不是，这使得习惯还是会有些些分裂，要是厉害了，还是有可能导致精神分裂的。
还是谈今天的主题：我是如何搞砸了本站的搜索服务的
上线了搜索服务后，搜索体验在所有遇见过的站内搜索中，算是顶级水准了。
从产品来看，这个搜索服务的所有操作体验应该是完全没得话说的，后台漂亮，数据清晰，API 工具所提供的接口也及其清晰明了好理解，文档更是做的非常好了，我这个英语渣整篇看下去完全没问题，偶尔几个不认识的单词，用下 macOS 系统自带的词典，选中单词就查得到中英解释。
但是，要说这个产品在国内的被使用情况，真不咋样普遍，为啥呢。
首先来说，它真的就是专门做搜索外包服务的，SaaS 模式，提供一个服务解决方案给你使用，直接靠这个产品本身来挣钱的，跟谷歌这类性质完全不一样。也就是说，它其实是个付费接入才能使用的服务。不过我这里不用担心，它同样有一个免费的方案 COMMUNITY Plan 提供给我们这样的普通小站用户，可存储一万条记录，每个月有十万次操作数可供增删改查使用，对于咱这样的小站来说，目前及未来可预见一段时间内，完全足够了。
它还有个特别的服务：DocSearch，用来干嘛的呢，一般人看名字看不明白，程序员可能一眼就理解了：用来做“文档搜索”的，什么是文档，就是大多数时候被称作 Documentation 类似这样的东西，就是差不多是“说明书”的意思了，一个工具如何去正确使用，是怎样的设计理念，有哪些问题需要解决，未来如何发展等等。
DocSearch，这个东西，免费提供的，最简单的使用方式：提交你的网站，通过了，它便帮你建立索引，然后会告诉你如何接入搜索功能，这样，就能有了搜索服务了。不过，我的理解应该不是所有网站都能被索引，应该仅限于互联网技术类文档吧，毕竟从列出的例子来看是这样的。
个人博客这样的小站还是自己折腾下吧，自己的东西不拿来折腾，还要拿谁的来玩呢。
本站是免费托管在 github.io 上，这是要让你知道的。自然地，上一版用来构建本站的工具就是使用的它官方所支持的 Jekyll 来处理 Markdown 文件来构建博客内容。
使用了配套的由 Algolia 官方推荐的索引工具 Algolia for Jekyll，就这样，上一版就这样成功地实现了搜索服务。
但是，为什么要有但是，就是因为其实在程序员的世界，永远不会满足于已有的工具，最开始用的好好的，但凡是发现了新的工具或者是原有工具遇到了根本性的痛点，转身离开的样子是绝不会回头半分的。
是的，我发现了 Hugo，基于对 Go 语言有一些些道听途说的好感，也测试了 Hugo 的运行情况，认为完全有必要用它来替代目前的 Jekyll 来处理这个站的内容。
就这样，我把构建工具切换到了 Hugo，重新研究了模版的设计，又原模原样地利用了已有的资源搭起来了这个小站。
等搞定一切最终发布到线上之后，问题终于来了：搜索服务没一个点进去能看的，文章 URL 全部失效了。
第一步：更新索引，有找到 hugo-algolia 与 atomic-algolia 这两个看似配套的工具，尝试用 hugo-algolia 去建立新的索引内容，清空原有索引 - 成功、添加新索引 - 失败，数据就这样没了。hugo-algolia 所报出来的错误我也完全无从查起，搁置。也没心思去研究 atomic-algolia 了，pass。</description>
    </item>
    
    <item>
      <title>现已加入 Algolia 搜索服务</title>
      <link>https://jeremyyin.com/post/2018-03-19-%E7%8E%B0%E5%B7%B2%E5%8A%A0%E5%85%A5-algolia-%E6%90%9C%E7%B4%A2%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Mon, 19 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2018-03-19-%E7%8E%B0%E5%B7%B2%E5%8A%A0%E5%85%A5-algolia-%E6%90%9C%E7%B4%A2%E6%9C%8D%E5%8A%A1/</guid>
      <description>大约在一年前左右，瞅到 Vue.js 使用的站内搜索与别的网站有些不一样，不仅仅不一样，而且有些特别。如果是在 Windows 系统上面曾经有谁用过 Everything 这个软件或者类似替代品的话，能知道它的实时输入搜索是多好的体验，得知道曾经系统自带的搜索功能就是等于几乎没有。
做搜索，绝不仅仅是看起来的那么简单，大到 Google 和 Bing 这种搜索巨头，小到记事本里面的查找搜索，大大小小各类搜索需求，搜索，是人的主动寻找行为，比起无意识的随便浏览，是高效很多的。
Algolia，据说是来自法国的初创公司，国内还没有看到有大面积的使用，虽然说搜索重要，可并不是谁都做的好，特别是站内搜索，多数的产品都是食之无味弃之可惜，但现今这款产品，醒目得很。
至于具体的技术细节，我也没去洗洗研究，还不如直接上手多试几次搜索看看，看这体验如何。
这次就不多说了，再会。
其实是编辑器多次无故奔溃，丢失上一次保存之后的东西，我很无语啊。</description>
    </item>
    
    <item>
      <title>一款小小的物流数据产品</title>
      <link>https://jeremyyin.com/post/2018-02-05-%E4%B8%80%E6%AC%BE%E5%B0%8F%E5%B0%8F%E7%9A%84%E7%89%A9%E6%B5%81%E6%95%B0%E6%8D%AE%E4%BA%A7%E5%93%81/</link>
      <pubDate>Mon, 05 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2018-02-05-%E4%B8%80%E6%AC%BE%E5%B0%8F%E5%B0%8F%E7%9A%84%E7%89%A9%E6%B5%81%E6%95%B0%E6%8D%AE%E4%BA%A7%E5%93%81/</guid>
      <description>今年应该是冷死了，上周感冒，后来我反思原因，可能就是在办公室冻着了。
现在完全不敢再说不怕冷了，可惜家里空调开了也并无大作用，昨天偶然机会在星巴克小坐一会儿，我突然觉得那才是我能正常待下去思考的温度。
农历新年就快要到来了，之前做了个小小的物流数据产品：国际快递燃油附加费率。觉得还是需要拿出来溜溜，可之前一直没决心搞下那几张图片，今晚索性就搞上几张图片，现在这个网站整体上，总算是可以拿出去还算是能看的了。
网站是给朋友做的，所以网站不是我的。我这里的这篇文章不作为他家公司的产品推介，我只是想说说其中一个完全由我想出来，然后花了一个周末两天时间给完整实现出来的这个产品，就是这个小小的「燃油附加费」。
因为我在上家公司就是全权负责物流板块嘛，所以自认为对日常实操还算是有很细致了解的。在日常工作中，其中一个是计算当前物流费用，一般需要频繁拿到物流费用参考值的部门是客服与运营，采购与开发部门偶尔也需要，再可能就是领导问起或是会议汇报会需要计算，这其中会需要用到渠道报价与渠道当前燃油费率；另外一个更加重要的地方是，对账，一般来说，对账会按照帐期或者是定期进行，相对出货来说就存在一定延迟，所以这时候不仅仅需要的是当前渠道报价与当前燃油费率，而且还会需要历史数据，每一份数据都会有一个生效日期，也就是会在某一段时间内是需要某份数据，而另外一段时间则需要另外一份数据。
在我曾经的工作中，我会维护一份我公司的全部渠道历史报价数据与燃油费率数据记录，以实现实时计算当前价格以及进行历史出货对账核算操作。渠道报价数据是每个公司不同，而国际燃油附加费率却是统一标准，大陆与香港地区甚至某些渠道将整个亚太地区作为一个片区设定相同的燃油费率。
虽然燃油费率均可以在各个渠道的官方网站查看得到，但是他们均不保留全部历史数据的查看，比如 DHL 提供近 3 个月，UPS 提供最近 90 天，差不多可以认为也是 3 个月的意思，其它渠道类似。
所以如果是有需要第一时间知道最新的各个渠道的数据，一个方式是查看各个渠道网站（更新时间有规律），另外一个方式是等候业务员通知（一般是晚个一两天），而如果是需要维护一个历史数据表，则需要有人有心记录并维护了。由于每个渠道的数据说明格式有些差异，则需要有人能理解并处理好以便可以供规范化计算使用。
有一些物流商也会维护燃油费率信息，但是我看一圈下来，他们 99.9999% 均都是每隔一段时间使用固定模版发布一篇简短的文章，然后复制粘贴各个渠道的费率信息。这？这不是我想要的使用数据的合理方式。
基于我的想法，我通过利用程序自动获取各个渠道的更新，将各个渠道数据统一整理规范，得到一份既可以随时查看到最新数据，又可以看到历史数据，并且数据格式对 Excel 友好方便直接复制粘贴使用，对人也友好方便查看。
排序模式是倒序，最新的在上面，如果是懂 Excel 的同学则可以知道利用 Index + Match 函数就可以自动得出曾经某一天的燃油费率。
历史数据我已经尽力找到了往前一些日子的，往后的就是程序自动更新了。
希望，一款小小的产品，对大家能有一些使用价值。
这便是我做这款小小的产品时候的一些思考。
如果有兴趣看看产品，请点击阅读原文去网站查看。</description>
    </item>
    
    <item>
      <title>关联了两个小程序</title>
      <link>https://jeremyyin.com/post/2018-01-11-%E5%85%B3%E8%81%94%E4%BA%86%E4%B8%A4%E6%AC%BE%E5%B0%8F%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Thu, 11 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2018-01-11-%E5%85%B3%E8%81%94%E4%BA%86%E4%B8%A4%E6%AC%BE%E5%B0%8F%E7%A8%8B%E5%BA%8F/</guid>
      <description>新年伊始，咱们这又来了新朋友，欢迎你们！
过去的一年我大概算了下，咱们这是：月更。平均一个月更新一次，有时候间隔长一些，有时候频繁点点。
新的一年，没什么特别意外的话，我还会继续时不时地写一点点东西。在更新频率上，我对于现在我持续在看的那些号相比，他们的文字能力我只能是羡慕了，他们一年几十万字的产出，内容覆盖相关的多个方面，专业度与人文广度，非一般人可企及。
这里并没有消极的意思，而准确说的意思应该是：以自己力所能及，逐渐精进。用胡适老爷子的话来说就是：怕什么真理无穷，进一寸有一寸的欢喜。羡慕是没有用的，放下心，去实践，深入细节，能往前走一步，便有一分收获，即便暂时做不到很好也无需忐忑，需相信往后总可以做到的。
切回主题，由于「小道消息」公布了两个小程序的 AppID，这样我也有机会在咱们这关联上它们。
第一个是 Readhub，整合了科技与互联网行业的一些资讯，在视觉与交互设计上都是很不错的资讯类小程序。以前我刚来到深圳进入工作岗位的时候，也会关注许多科技与互联网类信息网站，那时候也会去使用 RSS 订阅功能，不过后来 RSS 大势已去，这又是另外一个话题了。
最近也曾看到有很多类似的公司抓取各大新闻网站内容，然后通过内容分析与聚合技术构建了一些类似的产品，但是最终并不会给源网站带去任何流量输送，也更不用说这种做法的合理性了。而 Readhub 则是导向源网站浏览，这样也就不会是那种拿了别人的鸡来生蛋却不给蛋也不还鸡了。这样如果有些内容优质的站点，也算是多了一个合理的分发渠道了，不过也要吐槽的是引导过去后个别网站的浏览体验真是还停留在十年前的样子。
另外一款，名字叫「抽奖助手」，看名字就很直观地知道它是干嘛的啦。
应该现在很多公司都在开年会，吃吃喝喝，玩玩抽奖，小道消息他们公司还真是会挑东西做。就不具体介绍了，我早几天帮忙给「土豆儿」买寄养券，京东支付给我优惠了 10 块钱，这刚好，我就拿来给咱们大家抽奖了吧，设 3 个红包，每个 3 块，嗯，我也还有 1 块。
点击下面的小程序卡片参与抽奖即可，明儿中午它就自动开奖了，但是我还没弄明白开奖了之后我要怎么操作，那就明儿开了咱再继续研究。你问我「土豆儿」是谁？我只能告诉你说：土豆儿它是只狗。
 注：小程序的入口请使用微信扫码订阅公众号打开本文
 </description>
    </item>
    
    <item>
      <title>买个域名：jeremyyin.com</title>
      <link>https://jeremyyin.com/post/2017-12-15-%E4%B9%B0%E4%B8%AA%E5%9F%9F%E5%90%8Djeremyyin.com/</link>
      <pubDate>Fri, 15 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2017-12-15-%E4%B9%B0%E4%B8%AA%E5%9F%9F%E5%90%8Djeremyyin.com/</guid>
      <description>如果按商业角度来讲，我是该把所有下列域名全部给注册了的：
jeremyyin.co jeremyyin.net jeremyyin.org jeremyyin.me jeremyyin.cc jeremyyin.vip jeremyyin.cn 甚至可能还有：
jeremyy.in ... 以及还可能有：
xyin.com xyin.co //这个已经被注册了 ... jeremyx.com jeremyx.co ... xjeremy.com xjeremy.co ... 如果要是还有这个域名：
jeremy.yin 可惜并没有，不然我就更加要买下了。
不过呢，又有啥必要呢，并不是不差钱的角儿，拿下个 jeremyyin.com 就差不多了，挂个能留下点文字的地方，够了。虽然不是什么足够短又足够好记的域名，不过却具有鲜明的个人主义色彩，这可以了。
因为做了程序员的关系，自然没能免俗地去 https://pages.github.com 建立了一个仓库，这样，这些文字除了在微信公众号发布之外，也在 http://jeremyyin2012.github.io 留下了一个汇集之处。
现在，如果再打开这个链接，它便会自动变成了 https://jeremyyin.com ，它们，现在更加个性化了。
同时地，有了域名就可以设置自定义 DNS 解析，同时配合利用服务商的免费全球 CDN 加速，现在，加载速度更加快了，比 github.io 更快。
我想，这样，如果未来有更多的东西放在上面，访问起来就更加舒服了。
嗯，喜欢就好：jeremyyin.com 。</description>
    </item>
    
    <item>
      <title>2008 年是个好年纪</title>
      <link>https://jeremyyin.com/post/2017-11-06-2008%E5%B9%B4%E6%98%AF%E4%B8%AA%E5%A5%BD%E5%B9%B4%E7%BA%AA/</link>
      <pubDate>Mon, 06 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2017-11-06-2008%E5%B9%B4%E6%98%AF%E4%B8%AA%E5%A5%BD%E5%B9%B4%E7%BA%AA/</guid>
      <description>Dear Jeremy,
展信佳。许久未能再与你回信，真是很不好意思。我现在正在 2017 年末，再过一个多月，离你正好就快 10 年了。我挺喜欢现在的这个时间的，现在大家也不用写信了，我只在这里的一个商场里面见到过，那是写给不具名的未来，也不知道地址的，可能最终，就飘向了某个无人的空间了吧。现在，我们都用智能手机了，对，就是 Jobs 那种的，用手指点来点去的那种，不过比那个高级多了，可以装很多程序了。当然，病毒也是可以装进去的。
你问我走得快不快，我不知道，总是就这么走来了，前一次我跟你说我去那公司才真实地收获了一些 Money，然后又挥霍一空的事情吧，是啊，挥霍一空的感觉真是好喜欢又恐惧，后来真是好险啊。
其实，很久未回你呢，也是最近情绪持续性地跌宕起伏啦，不像之前一些时候跟你说的那样风平浪静。是呢，处着呢。不必太过担心啦，起起伏伏正常的呢，不过确实想起你呢，真是好想你啊。2008 年应该是你写出最后一封信的时候吧，刚好，你也可以用得上手机了，不用再去买 200 卡和 IC 卡大晚上地去冷风飕飕的电话亭了。是呢，现在电话资费便宜的也很便宜了，漫游都取消了，现在都上 4G 网络和 Wi-Fi 了。对啊，那规定还是等于就是废了呢，技术潮流是挡不住的。不过呢，现在啊，我都几乎不打电话了，原因吧，呃，身边已没人再会如此了，时间那么久的，谁还有心思一起陪无聊啊。
今天呢，我把那些信件翻了几个看了看。从你那里到我这里，它们静静地跟了我这么远，我很久不曾再打开过它们。我一直有个念头，我想着把它们都变成电子的，就像是现在，我给你发的电子稿这样。还记得我跟你说，写字不好就不好了吧，已经没有合适的机会让你练好字了，时机早就和你错过了，未来就是计算机键盘的天下，一样可以写字儿，不怕的。不过呢，我想着，它们现在存着的样子应该是最好的样子，也不必再去折腾它们了，从过去来的，留存着过去的气息，电子稿就确实没有这个味道。
确实，从你那里走来，我这似乎还是第一次真正再仔细去瞧过它们。
等你这个学期完了，你就准时回吧，那年天气不好呢，雪灾呢，那时候家里没受到太大影响，但是也好久一段时间没有电呢，我提前跟说下，别在外面逗留太久，千万记得。
翻开你那年的收到的文字，真是温暖的很啊，可又不知道你那年发出的文字到底是什么样子的了，我只看到唯一一封你外封上写着“一封可能再也没有机会寄出的信”，这里面还留存了一些你的些许言语，看起来一副离别的样子。
实在要跟你说对不起的，你写信的那些人，我一路走着，我都给弄丢了。你也别责问我怎么弄丢的，我自己也无法说的清楚，可能是时间导致的吧，是吧，它一直是那样谁都不管不顾的，一分一秒都不管就一直带我们走着。我这样把责任都推它身上，我是很赖皮了，可已然发生的事情，真是难以捉摸呢。如果跟你说下能改变点什么的话，我希望你在陪着时间向前走的时候，不要那么决绝吧，或许没有那么难受。
是啊，经常难受。当船离开的时候，就更难受了。
好了，很晚了呢，我明儿还得上班，只能先到这里了，再晚明儿就没法正常工作了。是啊，我这时间早已然不是那么随意的了，你仅且任性哈，记得照顾好自己。如果你想的话，与人一起相互多多照顾也是很好的嘛，你懂我意思啦，有些事还是早一些的好，性情正合适的年纪。
2008 年真是个好年纪啊！
2017.11.6 晚 多云
yours Jeremy</description>
    </item>
    
    <item>
      <title>慢半拍</title>
      <link>https://jeremyyin.com/post/2017-10-12-%E6%85%A2%E5%8D%8A%E6%8B%8D/</link>
      <pubDate>Thu, 12 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2017-10-12-%E6%85%A2%E5%8D%8A%E6%8B%8D/</guid>
      <description>在《绿光森林》中欧文在某个时刻对苏菲说：adajiu，被苏菲追问一通。而其源由于音乐专业术语：adagio，欧文搞音乐的嘛，自然。
至于为什么还记得有这么一幕，我也不知道，反正这些年它时不时地就会冒出来一下，比如这次又冒出来了。
当时无所事事，也没啥可玩弄的物件，也没啥可去的地方，以此度过不问世事的年纪，当也是很好的娱乐了。
后来不知何时起，直接把连续剧类全部默认拉入了黑名单，除非特别有机缘，否则是不会去看的，所以这些年看过的剧也可能手指头能数得过来了，还好，电影可能数不完。
当年在学校时一部《蜗居》惹的满世界的讨论，可今天再回看，编剧组的脑洞还是不够大啊，或者说，可能想象力的胆子也还不够大，谁又能想象数年之后，这满世界的如此荒芜呢。
还是威廉帅。
时间没有被拿去刷剧，那时间就总有地方用掉了，不然怎么从哪里多出那么多时间可以用来颓废。每次电影看完，还不忘记再去豆瓣瞧瞧别人怎么说，又或者是有和疑问与不解的地方，可终究能记住某些瞬间的，没有多少，感受都到骨子里了吧，或许是这样安慰着自己就是可以的。
自打毕业来深圳已快近 6 年，回想起，可能有两段时间是忘记了日月星辰。一段可能是拿着伍昊的两本 Excel 书的时候，另外一段，我觉着应该是把物流跟踪信息自动更新以及建立起订单数据共享操作服务的那两个月，Python 此时算是入了门。
回望下，往严重了讲，那可能是关系着后来自己生死存亡的两段时间。
一些事情发生的时候，一环接着一环，谁也不知道未来会发生什么，但是呢，又貌似冥冥之中，这些话，可能之前也讲过了，一种体会而已。
不过呢，Python 操作 Excel 也是顺手得很了：
 使用 Python，我们有个软件包（库）叫 Pandas，很多人总叫它“熊猫”，而其实大多数时候用中文输入法直接输的时候输入法总是给我提示“潘大师”，或许，这个人确实很流弊吧，可我始终也不知道是谁。
一行 df = pd.read_excel(&amp;quot;filename.xlsx&amp;quot;) 把数据读起来，再有各种数据操作几下，想干嘛干嘛，计算个几百万行也就零点几秒的事情，然后又是一行 df.to_excel(&amp;quot;filename_output.xlsx&amp;quot;) 就把数据输出到文件了，爽快的不得了，谁让看数据的话，还是 Excel 来的直接又暴力呢。
最近使用它的透视表用的爽滑得很：
df_pivot = df.pivot_table(index=[...], aggfunc={...}) ，数据再多也不在话下吧。
 “列操作”的思维从 Excel 那里已深有体会，而到了 Pandas 这里，深刻得不能再深刻了，也不用说“数据类型一致性”的规范有多么重要了，现在看到谁在 Excel 单元格里面使用 - 作为零值占位符简直就想立马一棒子挥过去对吧。还好，Python 也能从容面对各种数据奇葩，难看的是脸。
写 Python 最喜欢 Mac，可是 Excel 还是 Windows 流弊，不得不叹气，Parallels 这个不仁不义的，macOS 一升级发大版本它就跟着发新版本跟你说咱们又可以付款升级了亲，升级只要……
可一年不到你就都已经发两个大版本了，真是懒得理你。
去年有人推荐的《信号》，存都存了，最后依然没看，后来了我跑去看《虫师》了，实在说不出来是治愈系还是致郁系，可却是是一个人躲起来看很舒服的。
对了，据说四川辣酱火了，果然还是火爆了，都是因为《Rick and Morty》，如果你连过我的热点 Wi-Fi ，你是否还记得曾问我这密码怎么辣么复杂，可其实一点也不复杂对吧。
“人”这种生物才复杂。</description>
    </item>
    
    <item>
      <title>颓废感的来源</title>
      <link>https://jeremyyin.com/post/2017-10-11-%E9%A2%93%E5%BA%9F%E6%84%9F%E7%9A%84%E6%9D%A5%E6%BA%90/</link>
      <pubDate>Wed, 11 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2017-10-11-%E9%A2%93%E5%BA%9F%E6%84%9F%E7%9A%84%E6%9D%A5%E6%BA%90/</guid>
      <description>按说我不酗酒不抽烟不赌博不嫖娼不沉迷游戏，实在不忍也就自己放飞机，尽量不带给别人负面情绪，不增加他人负担，明面儿上别人说理性沉稳、不急不躁，这确实应没啥太多说头了。
可有一感觉挡不住：颓废感。
时常想，那些手里夹着烟孤身行走抑或是依靠栏杆的人们，他们手里夹着的其实到底应该是什么？当吞吐之间，吸收与释放的又该是什么？
又或是想，那些以酒期望灌醉自己深门闭户躲在黑暗角落偶然间盯着那一束亮光泪光闪烁时候，对旁人来说，他又是谁？
我时常走在路上脚步飞快，不忍多停留，无论是嘈杂声音或者又是刺鼻气味都使得难以多留片刻。待到安静清新路段，才不自觉地慢下脚步，无论左看还是右盼，也不会记得擦肩而过的人是谁。
插播下故事：
今日坐公交回来，旁边座位两女自顾自讨论其中一人离婚事情。自我叙述：
 我这次拖拉杆箱出来，小姑倒是有留我的意思，他肯定是不会来拦我的。我承认以前是我脾气不好丢过他几次行李箱和衣服说让他滚，可那是我真很生气。我们本来就没啥感情结的婚，还是闪婚。现在这么搞，他也肯定是不会在乎我的感受了。离就离吧，也让朋友他帮忙找好律师了，家产也还是要分点的。
 不是我故意听人家家事，但是坐旁边不听到也不可能了。
不是非得替这男的说话，可是想想，面对一次又一次行李箱和衣服被丢出门外，一次又一次歇斯底里地”滚“，而本身还没有什么感情和留恋的闪婚，如果还想着要照顾谁的感受，只可能要么钱在人家手里，或者命在人家手里了。
下车想了想，又一个负面。
城市给了我们很好的地方让自己有机会独处于世而又不惊扰世人，可能走在街上刚扔完烟头准备上楼的那个人，回家得面对家人的抱怨。可能那个躲在角落里喝酒的那个人，心里有些话想对谁说，可是又并不是适合对任何人说起，毕竟不是随便一个人就能承受起他所经历过的痛楚，即便不是直接经历，即便只是可能的一番描述。
而我，或许有时候走在某个公园的小路上，或又是坐在某个椅子边，眼神呆滞，面无表情，多半，心在颓废期。
只是现在公园少有去，蚊子多，反倒是家里空调舒适度高很多，动不动一走神就可能一晚上过去了。
女朋友看不得我颓废的样子，甚至不愿听到我“今天好像没干些什么”的回答。
面对这样的场景，我的颓废感猛然间又增多了很厚很厚的。
或许，如若颓废感的行为之一不是葛优躺，而是换成打坐，可能听起来就完全不一样了吧。
这生活，可是无力的很了呢。
要么就再等几天可能就会好些了吧，总是如此往复无常。</description>
    </item>
    
    <item>
      <title>错过再多</title>
      <link>https://jeremyyin.com/post/2017-09-08-%E9%94%99%E8%BF%87%E5%86%8D%E5%A4%9A/</link>
      <pubDate>Fri, 08 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2017-09-08-%E9%94%99%E8%BF%87%E5%86%8D%E5%A4%9A/</guid>
      <description>这标题没写完，可能原应该是：错过再多，也不要错过自己。
到底错过了什么，时年二十多岁，如果没有由头，恐怕贸贸然是讲不不起来的。
近日前，曾有人给我留了这么一句：
 不用刻意，我也不想再像以前一样去再意那些了，该慢慢沉淀自己，过自己想要的生活，睡，晚安
 这样的言语在我如今的生活中来看，看得我云里雾里。
但有种感觉是毋庸置疑的，当刻意在乎的东西不再那么在乎，当曾经的兴趣已经不再得以满足，当已然决定转身不管不顾身前身边事，当把自己包裹在一个狭小的空间中，的这些时刻，生活已然告一段落。
告一段落，是决定以新的或者重新以一个心态去看待曾经发生过的事情，以及即将到来的未知的世界。
这又让我想起《山河故人》，当在和平年代，生命长河没有战争威胁，不用担心生命危险，不必为下一晚在哪个路边停留而忧愁，然而，我们依然会面对人来人往，风云变幻的时间流逝。
可知道，能陪走一段已然很荣幸至极，也就都值得了吧。
为什么在此提起《山河故人》，是它点醒了一件事情，那便是没有人会永远地互相陪伴走到永久，伴侣会遇到各种原因而离开，父母也会因时间而离开，孩子也会因长大而离开，朋友会因各种因素悄然地就不见了踪影，又或许会在某个时刻蹦出在你眼前，可也未必有心理准备可以承受的起。
或甚至，当知道真相的时刻，更深感往事如梦如烟如醉如痴，又如此多伤。
也在不久前，《雄狮》上映，与某人去看了，为此我也在 iPad 上重新找到 Google Earth 来看，而同时又回想几年前凭着有限的记忆与状态处于云里雾里的朋友一起走上寻找印象的路程。
路，还是那条路，人呢？
让它深埋，让它过去，曾经存在过，又偶然出现了，一晃而过，往事不可追。</description>
    </item>
    
    <item>
      <title>努力投身 Python 3 的怀抱</title>
      <link>https://jeremyyin.com/python/2017-09-02-%E5%8A%AA%E5%8A%9B%E6%8A%95%E8%BA%AB-python-3-%E7%9A%84%E6%80%80%E6%8A%B1/</link>
      <pubDate>Sat, 02 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/python/2017-09-02-%E5%8A%AA%E5%8A%9B%E6%8A%95%E8%BA%AB-python-3-%E7%9A%84%E6%80%80%E6%8A%B1/</guid>
      <description>15 年开始学习 Python 的时候，看遍了大家关于应该选择 Python 2 还是 Python 3 的讨论和争执，还有，妥协。
按照我买电子产品“买新不买旧，买好不买差”的原则，我毅然决定先从了 Python 3 再说。
是的，争执无意义，行动才是根本。
后来，进了新公司，放眼望去是 Python 2 的世界，曾有想法切换，却始终被几个函数限制，没能彻底实现下来。
昨日，开了个新项目，心思又动起来。
今日，将原来的函数研究一番，可以连通了。
以后的新项目，就走向 Python 3 吧。
未来，是它的。
&amp;ndash;
今年 Python 这门程序语言终于冲上了头牌，在机器学习、大数据分析、人工智能等几个领域热火朝天。
然而，现实情况是无论外面如何热火，却没有当初那种决然冲进去弄一把再看的动力，说到底，还是没有实际的目标可以拿来玩耍。
先做做 Web 也好吧，是时机未到。
想想呢，我们确实处在一个最好的时代，Python 3 发展了好多年，相关的配套也都成熟，开箱可用，拿来就用，上手简单，做事容易，实在是最好的时代，连我这样贸贸然闯进来的也能无所畏惧地动手。
不过这样被如此美好的时代所惯坏的开发者，很多时候，真是懒得动手，一想着有点复杂操作的就觉得痛苦，凡是步骤超过 5 步的操作都觉得烦操，最好是一行代码或者命令就能操作起一切。
是，喜欢 Docker。
一行 docker-compose up -d ，或者是 docker-compose down ，甚至是 docker-compose scale app=8 ，直接就撑起整个世界的感觉，真是极好不过了。停止与重新开启的时间不过几秒钟，真是让人很喜欢的东西。
可惜了，它和 Windows 相处还不怎么友好，这又是个痛苦的面对，自己 Mac 开发玩可以很爽，可运行产品的环境竟然如此糟糕，不能忍，但又没辙。
是开发者，忍受得了千万种折磨。
同时，也是用户，喜欢简洁明了的操作体验。
不知道这世界明天会走得多快，没有什么是理所当然。</description>
    </item>
    
    <item>
      <title>造个轮子</title>
      <link>https://jeremyyin.com/python/2017-06-14-%E9%80%A0%E4%B8%AA%E8%BD%AE%E5%AD%90/</link>
      <pubDate>Wed, 14 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/python/2017-06-14-%E9%80%A0%E4%B8%AA%E8%BD%AE%E5%AD%90/</guid>
      <description>技术，是个好东西。
有能力利用技术造出一些有用的东西，也是再也欣喜不过了。
我们都知道造房子有点难度，构建高楼大厦就更加有技术难度，从设计到施工，没任何人全能精通。造汽车就也难了，虽然也是从设计到制造，可知识又是数不过来的多，更不用说制造经验和制造水平。
能清晰解释出差速器原理的，也是不错了。
可是，当轮到复杂度同样不比造房子造汽车底多少，有时候甚至更为复杂的编程领域时，为什么大家就不觉得这有什么难度了呢？
 我觉得这个没那么复杂，你这样，这样，然后这样……，不就可以了嘛，我认为理论上是肯定可以的，你就照我说的做，到时候看到问题我再告诉你改哪里……
我不管技术上怎么实现哈，我就只说我的需求……
我想要你实现我把这个处理完的文件在手机上就能直接发给别人，这样我就不用还去开电脑了，晚上谁还不是想躺床上拿手机点几下就把活干完的……
你这个一两天肯定是做不出来嘛，半个月你能不能做出来……
 我觉着我要是能半个月定制化做个订单系统出来（仅仅后台 API ），我也觉得我完全能配得上 professional 这个词了。
可惜，认清现实吧。
一周，也就结识了个多级分类。
至于，造一个多级分类到底有何难度，我也无法解释清楚。
至少，这并不是一棵树而已。
好了，多级分类搞得定，后面也还是好说的。
未来，这个简单实现的多级分类看要不要开源。
&amp;ndash;
人说，不要重复造轮子。
可惜真相是，先不说没有合适的轮子可用，假使有，那么也得懂的轮子的一些些细节，才能正常使用吧。
见过给桑塔纳上三一重工的轮子的么？
好了，自己的轮子能用了，收一收，再这样下去，女朋友都该跑路了。</description>
    </item>
    
    <item>
      <title>那些闯入的 Bugs</title>
      <link>https://jeremyyin.com/post/2017-05-22-%E9%82%A3%E4%BA%9B%E9%97%AF%E5%85%A5%E7%9A%84-bugs/</link>
      <pubDate>Mon, 22 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2017-05-22-%E9%82%A3%E4%BA%9B%E9%97%AF%E5%85%A5%E7%9A%84-bugs/</guid>
      <description>住在山边边的一个好处是离道路远些，路面噪音会少一些。
离树木近一些的好处是一眼过去便是自然，空气会稍微好一些。
然而期望值还能有多高呢，仅此而已罢了。
却，有件事情不得不提一下：Bugs 。
它们总是在某个不明所以的时间里闯入，然后等你看到，躺尸在地上。
不能碰它，它并没有逝去。
不能靠近它，或许会臭你一脸。
如果，不小心翻它过来，它还是会爬，也有可能会飞。
我不是那种见到蚂蚁如果踩到会认为是荼毒生灵的人，但是，这 Bug ，是我干不掉它。
我只能认输。
但是，这是什么大不了的事情呢？
不，出现在这里，是绝对有原因的：它是雌的。
你问我是怎么知道的，颗颗，自然不是我用看的，而是，我猜的。
如果见到一只 Bug ，而立马要做的事情其实是：检查毛巾是否有被异物附着。
为此，也废过一些毛巾。
偶尔，还会出现在晾晒的衣物上面，可这还能怎么办，当然是选择原谅它：并把虫卵撇下来冲入下水道。
至于蚊子、蜂，等等各种飞虫，还是少见勿怪了。
住在森林里？别逗了，都不够喂蚊子的。
—分割线
同样有 Bug 的困扰，可有些能干掉啊。
如果，面对一个总跟你说“我觉得这个其实很简单，你可能想太复杂了，你看这样……”，但是又不相信统计学知识的老板，你该怎么办？可是偶然间还会兴奋地谈起人工智能，这又是要闹哪样？
我能闹怎样，当然是选择原谅他咯。
这世界，谁容易呢，没谁。</description>
    </item>
    
    <item>
      <title>成为一个怎样的创造者</title>
      <link>https://jeremyyin.com/post/2017-05-20-%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E6%80%8E%E6%A0%B7%E7%9A%84%E5%88%9B%E9%80%A0%E8%80%85/</link>
      <pubDate>Sat, 20 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2017-05-20-%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E6%80%8E%E6%A0%B7%E7%9A%84%E5%88%9B%E9%80%A0%E8%80%85/</guid>
      <description>去售后取回了新的iPad，世界之窗的星巴克还是不适合久坐。
所以想着去个新的地方，华侨城或许是可以的。不过在去的路上来到了华侨城这边的一家星巴克，感觉还可以。
所以，现在已经坐了很久了。
去年的6月1日，在茶话会上我说在这个时代，要去做一个创造者：Creator。
记得在很久之前，我曾说，我从心里敬畏程序员们，因为他们可以将这个时代的很多想法得以实现，并在一个普通人难以想象的高度，解决问题并创造成就。
马上就也快6月了，从意外地有机会真正开始进入职业编程，半年过去了呢。
某种意义上来说 ，对于这种境况，我们需要定期与不定期地回望过去，审视一下在已经过去的这么久时间里面，到底发生了什么事情。
然后在这样的回望和审视中，一边是想验证下自己是真的已经有足够能力赋予它未来，一边也是想想是否存在心底里的不安是否已经真的过去。
实际上发现，不安依然存在，而是否可以足够赋予未来，有希望，但是还是不足够确信。
这说了不等于没说一样么。
是的吧，在一切的不确定中前行，是最有意思的生活。
&amp;ndash;分割线
自从微信开始有了新的朋友圈控制规则之后，很多人都开启新的设置，当然也包括我，何况我为了完成一个类似的模块，还反复研究了很多背后的数据逻辑。
从一个产品的使用者，变为一个产品的背后编码人员，着实需要跨过一座很大的山。
逐渐地，我觉得会更加地对处于自己领域之外的东西需要更多的敬畏感了。
对于职业，需要有些敬畏之心才是。
不过职业与职业之间，都有些许的联系，在需求与产品之间，有很长的路要走。
只不过，在短期，我们不应过低估计事情的难度，而又在一个较长的时间上，我们却不应对一个事情的实现难度预估过高。</description>
    </item>
    
    <item>
      <title>《顺便帮朋友接孩子放学》</title>
      <link>https://jeremyyin.com/post/2017-04-28-%E9%A1%BA%E4%BE%BF%E5%B8%AE%E6%9C%8B%E5%8F%8B%E6%8E%A5%E5%AD%A9%E5%AD%90%E6%94%BE%E5%AD%A6/</link>
      <pubDate>Fri, 28 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2017-04-28-%E9%A1%BA%E4%BE%BF%E5%B8%AE%E6%9C%8B%E5%8F%8B%E6%8E%A5%E5%AD%A9%E5%AD%90%E6%94%BE%E5%AD%A6/</guid>
      <description>你爸为什么今天还加班呢？
有时候是会加班
你英语这次考多少分呢？
忘记了……让我想想……嗯……98
你哪里错了啊？
判断题那里
为什么错了呀？
它那个意思不是那个意思
……
《顺便帮朋友接孩子放学》</description>
    </item>
    
    <item>
      <title>我与 Mac 的渊源</title>
      <link>https://jeremyyin.com/post/2017-03-01-%E6%88%91%E4%B8%8E-mac-%E7%9A%84%E6%B8%8A%E6%BA%90/</link>
      <pubDate>Wed, 01 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2017-03-01-%E6%88%91%E4%B8%8E-mac-%E7%9A%84%E6%B8%8A%E6%BA%90/</guid>
      <description>2004 年进入高中，正式开始接触网吧，而后不久学校每间教室开始安装电脑，而后开始组建起专门的计算机教室，带网的。
QQ 号就是那个时候同学帮忙申请的，就一直用着了，而后自己也申请过一些，都几乎忘记和放弃使用了。
2007 年进入大学，有机会去网吧的机会多了很多，但是，网吧的设备比计算机教室的条件差很多，硬件和软件都差很多。也是同年，学校新开几个计算机公共教室，收费使用，差不多就是网吧模式了，一般都由申请学校补贴的同学们管理着，等于拿时间换点生活费，要是喜欢计算机我觉得可以，要是不喜欢的，我认为是不必要的，现在看来，一切拿最宝贵的时间换低廉的回报的，都不值得。
那年，买了当时新出的很贵的 Mp4 ，各项指标都很不错，是当时所能买的起的最好的东西，然后就开始了倒腾的进程。音乐下载、转换格式，视频下载、转换格式，电子书，图片，不是在下载的路上就是在转换的路上。
网吧的机器都是无盘系统，学校的机器有盘能保存东西，但是系统一旦重启后一样会复原，经常把机器折腾蓝屏。至于它为什么会蓝屏，以及为什么会有很多机器一直处于开机就蓝屏而无法继续，我的确未曾细细思考过。Windows 当时都是如此，习惯了都。
那年某天发现自己的手指已经在键盘上飞梭了好一段时间了，而之前很长一段时间还在思考手指到底如何才能按照理想分工各自就位。
那年某天，看到了苹果的官网，被里面的视频吸引。一个穿白色衣服的男子，没多少头发，用很磁性的声音说产品的制造，然后穿插一些工厂的机器切削加工的视频，看起来很厉害的样子。说的，是 MacBook 。
是的，那个人现在依然还在这样宣传他的产品，发布会不会看到人上场，却总是在视频里面露脸，你去看视频就知道我说的是谁。
那年，iPhone 发布了，后来我也只是听说很贵，很贵很贵就对了，后来还几乎买不到，有人没日没夜地排队。
偶尔，我还会无意间访问到苹果的网站，但是还是没概念，没有见过实物，也没机会见到，小城市没有市场，大家也不知道，自然也没有人销售，或者，是我不知道而没遇到而已。
后来那几年，与电脑接触都是上一篇提起的那些，自己没有，然后又却会帮别人弄。
后来我想，在没有一样东西而又非常想拥有的时候，是最有动力把它的一切都了解的清清楚楚，能张口就来提笔就写，头头是道。
但是仍然离真正使用它还有很远的距离，你所了解的，只不过是别人的说法而已，在网络营销被商家注重了之后，你甚至看到的都是商家发出的营销内容，用现在的话说：你被套路了。
毕业后几年，也不知道哪天开始看到「池建强」在说 Mac ，还有一些关于那些人的故事，最开始在哪里忘记了，难道，是微信公众号？
也看到「鬼脚七」在谈及自己如何步入技术的圈子，后来，又看到他开始走向另外一个行业。
而我，只是一个看客，他们不会知道我的眼睛在看哪里。
其实，促使我最终决定拿下 Mac 的主要动力，其实来自于 Keynote 它可以制作精美绝伦的幻灯片，可惜，自从买回来，它就被挪去做别的事情了，Keynote 也没能打开过几次，好像这事儿就从未在脑海里出现过一样。
是的呢，本是奔着某个点去，却沿路又发现了更多的路，风景美不胜收。
走一路，看一路，但，我们最终会在某个时刻抵达最初的那个点不是，至于需要停留多久，已不重要了。
有一个字：撞。
如是说生命的火花需要激情的碰撞，不如也说生活不是列车时刻表，你与它时间，它与你惊喜。
只要是好的，那都会是好的。</description>
    </item>
    
    <item>
      <title>我与计算机的那些事儿</title>
      <link>https://jeremyyin.com/post/2017-02-27-%E6%88%91%E4%B8%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/</link>
      <pubDate>Mon, 27 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2017-02-27-%E6%88%91%E4%B8%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/</guid>
      <description>首先在发上一篇「春节随想」的时候，那时候会想可能接下来会就里面的一些话题作一些展开，不过今天看，我暂时就不写它们了，写点其它的。
已经过去的这个周末，弄了一件事情：把一台性能够用但却已近乎被放弃的笔记本电脑从死亡边沿拯救回来，用主人公后来的话说是：它又活了。
所以，这也算是大学那几年的折腾，曾经付出那些时间，在今天依然能体现出的效用吧。
如果往前追溯，我想我了解到有「计算机」这个词的时间，应该是在小学六年级，几节不那么特别有趣的课，和一本小小的册子书，后来几年中，好像还时常能看到它冒出来，现在它在哪里，我应该是不知道了。
在后来的很长一段时间里，大概持续五六年时间，我一直认为未来我可能不会有多少机会手写字了，因为，如果既然有了计算机这么厉害的东西，用它来写字，会是多么厉害的事情。
当然，后来确实是如此，科技改变了很多东西。也让我，现在连名字都不会好好写了，还好签名可以个性化，哈。
现在，我尽瞎折腾：做程序员，写点代码，了解互联网web技术，将来做做网站，做做数据处理和分析，以及自己随便玩玩看似有点难度的东西；或者学点设计，折腾下图片、音频、视频，还有文字。
如果往回看，今天的选择可能在曾经的某日就已作下。
曾经有人跟我说，你这么厉害可以去做程序员啊……
或许，说者无意，听者有心了吧。
2008年那个时候心心念想给自己弄台电脑，但是持续好些时间，这期间没能给自己折腾上一台电脑（还不是因为穷），倒是全学校到处跑别人宿舍做义务电脑技术员了。直到后来接近毕业了，自己开始工作了才真的买下了真正属于自己的第一台笔记本电脑，那欣喜的感觉至今犹深。
至于过手的电脑的数量，我认真想想可能其实不是很多，毕竟有段时间与校外的电脑公司达成合作关系，由于自己对产品选择的想法以及并未将其作为重要的经济来源，而确实仅仅只是给身边朋友提供一些咨询服务的缘故，过手数量说出来可能都羞涩了。
基于「科技改变生活」的理念，混迹于计算机硬件、系统、软件等类型网站，想想过去的那些时间，也是乐在其中吧。
而现在，也慢慢地发现态度的改变，在认为把它们当工具的前提下，已经不推崇花时间去折腾这些东西了，能一次搞定，能花钱买好的，就尽量一次性买能承受得起的最好的那个。
毕竟回头看过去的时间，发现时间才是最宝贵的，如果能不受经济所限，自然是尽早去冲着事务目标去行动才是，而不是被工具所限制而延迟了很多本该想做的事情和决定。
其实一直想分享几个我所关注的公众号出来，不过一直没行动，因为多图文排版要编辑图片，虽然直接贴原始的二维码也是可以，不过我认为太粗暴了，虽然早期他们也是这么干过。
然后，想分享我关注的，主要也是想借他们来表示下我的一些喜好和观点，作为朋友，除了吃吃喝喝，还是要了解点想法不是，所以等我下次写吧。
今天我把底部菜单更换为了我个人的二维码，点击「加微信」就能收到一张二维码，新来的朋友可以加一下。
要是没有什么特别的考虑的话，我想，最先100位订阅，就作为种子订阅用户吧，超过一百订阅之后我就把它撤下来。
当然其实还可以有另外一个想法，我觉得我可以一年接待5个人以内的计算机咨询业务，基本的可能会是提供选配咨询服务，如果有必要可能也提供面对面拆封组装，以及一些系统与软件安装，当然也可以额外提供一些使用建议和软件使用等（我有所了解范围内的知识）咨询，至于既然是服务，那么就是要收费的，但是收费标准嘛，完全看人看心情，不过可以给个数字作参考：50/h。如果你有需求，我会先给你洗脑我的理念，如果你愿意，咱们再谈事情，嘻。
有钱才能任性。</description>
    </item>
    
    <item>
      <title>春节里的随想备忘录</title>
      <link>https://jeremyyin.com/post/2017-02-08-%E6%98%A5%E8%8A%82%E9%87%8C%E7%9A%84%E9%9A%8F%E6%83%B3%E5%A4%87%E5%BF%98%E5%BD%95/</link>
      <pubDate>Wed, 08 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2017-02-08-%E6%98%A5%E8%8A%82%E9%87%8C%E7%9A%84%E9%9A%8F%E6%83%B3%E5%A4%87%E5%BF%98%E5%BD%95/</guid>
      <description>11年11月抵达深圳这个城市，至今已好几年过去。
最初的两年，由于一些原因而未在春节回家，也因此，给人留下了我专门过年不回家的印象。
不过，不必辩驳什么，有时候回，有时候不回，自己也记不清，别人当然只能记得不回的那些事儿。
好的，都会记不住，不好的，总是印象深刻，脑子就是这么使的，毕竟，在动物时代，记住不好的，能使下次避免伤害。
其实年龄渐长，已有能够预估到执行一项事情所会遇到的境况了。
不过，还是既然决定了执行，就执行就好了，把关注点放开一些也就足够应付了不是。
其它的不想多说了，今天，发点特别的。
在那十几天的时间里，会遇到一些事情，和一些情景，而方便的时候就在当时记下了几句随想，而不方便的，可能就没能在这里留下记录了。
机身没有弹孔的飞机我们都看不到，因为已经飞不回来了。
下面是随想记录，只字不删，原原本本。
 物质贫乏必定带来意识的贫乏，而自我意识的变化需来自外部环境的改变，这便是外部环境的重要性所在。 大概在初中到高中时候常听同学们和我说，你改变不了世界就去改变自己适应世界，我时常以为这是消极的想法，你想，生活在这世界，哪里能不会改变点什么呢，现在想着，其实对于生活的无奈和对世界的失望，不必一定要改变它或者又让自己改变而适应它，其实，可以让自己换一个更好的环境，一个你会喜欢的环境就可以了。 逃离贫困的地方，不仅仅是指的物质贫困，更加指的是意识贫困。
孩子是大人的投影
对方是自己的投影
人们为什么会喜爱“烟雾缭绕”
极小时候你任性的表演会让她们突然想送你去学舞蹈美术音乐，但是在你自己选择的时候却未必会支持，甚至是业余都不会。
什么样的浴室（卫生间、洗漱间）会让人觉得有生活气。
东风牌大卡车 我头上的仍旧明显可以摸到的疤痕深刻地提醒着我曾经历过的那一场车祸
朋友说我内心是苦的
人要出门，天要下雨，菜花点了点头。
做事儿不靠谱，就会打嘴炮。别怪我不待见所谓老乡。先证明做人做事靠谱才行。MLGBZ
茶陵的某些人们就是不仅可恶，还傻得可恶，蠢！stupid！
所谓有那么一部分的本地人，他们的可恶可恨之处在于他们不仅仅遇见外地人见一个宰一个，更加的是他们对本地的人更是没有做事的方式可言。
第一，我不相信任何人的自身素质和自觉性。 第二，我不会相信任何所谓老乡的职业素养。 除非，你已证明你值得信任。 看到高速路和高速服务区你就理解了。
 </description>
    </item>
    
    <item>
      <title>关于一些事情的事情</title>
      <link>https://jeremyyin.com/post/2017-01-15-%E5%85%B3%E4%BA%8E%E4%B8%80%E4%BA%9B%E4%BA%8B%E6%83%85%E7%9A%84%E4%BA%8B%E6%83%85/</link>
      <pubDate>Sun, 15 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2017-01-15-%E5%85%B3%E4%BA%8E%E4%B8%80%E4%BA%9B%E4%BA%8B%E6%83%85%E7%9A%84%E4%BA%8B%E6%83%85/</guid>
      <description>关于即将决定要去学习的IT类技术 自从15年决定开始正式学Python来搞事情，今年，也算是进入了第三年了，进入全职工作，所以真枪实弹地搞事情，实力自然会上一个台阶，至于过程，就都丢给时间和机会去磨砺。
现在主要做的事情是网站后台服务API的开发，搞懂这背后的事情，就基本搞懂了后台服务端。
计划增加这些任务：学习JavaScript、CSS，深入学习HTML。
解决后端的事情，利用API提供统一服务，要完成运行一个完整的网站，还要搭前端，这是最终看见的东西。
而它的技术栈，就涉及到上面这些术语，所以，筹备前行。
关于爱情与婚姻 近些时候，嫁对一个原生家庭会如何幸福的文章很是得人心而大范围转发。
而我，恰恰是没有如此机会能在一个美好的家庭里面成长并获得来自父亲母亲方面任何关于爱的潜移默化。我并非出于对此文章的辩驳，而是想，即使我们已然没有机会再从父亲母亲那里学到关于爱的任何信息，也不必因此气馁，否则，就应该直接放弃念想了。
是，我也一直怕，一直畏惧，一直自卑，而甚至在我的脸上，直接就能看到那些岁月写下的印记：不会怎么笑，也笑得不多，不笑的时候完全像是在生气，就像被人欠了好几个亿，即使内心冲动也不明于表，即使内心激动也无法表现于形；言语上表现更是极为抠门，能听到赞美是一种奢侈，而冷言冷语却总是不经意就脱口而出，叙述一件事情就好像在跟人吵架，也从来讲不好一个故事，语言上带感情这个事情几乎就好像只有冷漠；开不起玩笑，任何事情都能整出一脸严肃感，动不动上纲上线。还有许许多多……
但是我也有理由相信，保持对生命的敬畏感，人生每时每刻都会发生变化，逃离曾经历过的熟悉的氛围，接收来自外界不同的信息，并形成持续的改变，我相信是可以的。
不会存在完美，但是可以相信变化，可以逐渐地变更好。
对自己说些具体的：
 放弃持续做简单的抱怨而是去持续尝试使它变好的行动，哪怕最终只变好了那么一丁点，甚至完全失败，也没关系； 尝试建立交流反馈而不是完全拒绝沟通，因为拒绝沟通对任何人都是死结，可以直接宣布死亡了； 不一条路走到黑，尝试退步让路，不争论不休，即使真的对方错了也不必在当场压死； 承认自己不是那么聪明的； 说出自己的困惑和压力； 如果真走不下去，该放手就放手，双方都是； 如果有孩子，告诉他真实发生的事情，如果时间不允许就晚一些，持开放性态度接纳他的存在，并自己做自己的样子，让他知道即使父亲母亲没有能在一起也是最好的选择； 如果以上都做不到，就过好自己，对自己好点，并跟大家承认自己做不好爱情或者婚姻这事儿，但至少还能做个人； 每个人都是不一样的，不以自己的标准要求人，也不严格以莫名的社会水平要求自己，但尽量不要太反社会； 在能力范围内，选最好的做最好的，如果不知道什么好，就去想什么才是好的，总是随便将就是不太可以的；  其它或许还很多，也有一些额外补充不仅仅对自己的：
 性是可以谈的，也是可以做的，但是也要认真做功课的，和其它事情一样，平常对待就好； 我是不介意曾经的，但是此刻是排他的；  其它想到一些关于婚姻：
 二人关系首位，其它靠边； 理应有些自私，自己家过好，才能有能力考虑他人家  先这些吧，如果说错，请点名。
关于生活 保持好奇心，保持对新事物的兴趣，书，要多看，越多越好，也更要实践去玩。
其它写不明白，这个题目太大，就仅上面这句吧先。
哦，当然，运动要经常去，要对自己身体负责。
要去很多地方走走。
其实，宅一段也是不会有什么不好的。
在一处，做一处的事情，持一处的心。</description>
    </item>
    
    <item>
      <title>从奢望爱情到为爱忧心</title>
      <link>https://jeremyyin.com/post/2017-01-14-%E4%BB%8E%E5%A5%A2%E6%9C%9B%E7%88%B1%E6%83%85%E5%88%B0%E4%B8%BA%E7%88%B1%E5%BF%A7%E5%BF%83/</link>
      <pubDate>Sat, 14 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2017-01-14-%E4%BB%8E%E5%A5%A2%E6%9C%9B%E7%88%B1%E6%83%85%E5%88%B0%E4%B8%BA%E7%88%B1%E5%BF%A7%E5%BF%83/</guid>
      <description>凌晨一点半，环卫工人在为马路中间的绿化带种花。
司机跟着导航，不知所措地闯入了单行道，转头走入深南却又发现不可左转。
晚上的凤凰路还是灯红酒绿车水马龙，等到发现了前面路被封住，只好下了车。
司机说明天就要回去，而本来，是今天，如果是，这个点应该早已出了广州。
我并不想继续问他要回去哪里，就是，他老家在哪里。
你一路平安就好，载完我，就回去早些休息吧。
吃饭，喝酒，唱歌，喝酒，拼骰子，喝酒。
没有别人家的公司那样的年会节目，没有费心劳神的节目排练，没有你们费尽心思等待的抽奖环节。
如果做不到有心安排，那就这样简简单单吃吃喝喝，我觉得已经是挺好的。
只要老板您这个时候不表现得抠门，只要您这个时候一脸豪气，放开胆指点江山，咱都愿意。
不折腾咱就是挺好的。
点歌。
仅有的几个羞涩的女孩子们表现的并不积极，这与预想的不一致。
老板娘积极，非常好。
这里中间略过几个小时。
酒过几轮，女孩子们走了，然后歌过几轮，老板一家三口走了。
IT男们发现时间还久，不唱对不起这机会。
笨小孩，我们来了。
突然我才发现，时代的印记，它是那么的明显。它无时无刻地都在，不断地在每一处表现出来。
在我与我之前的那个时代的孩子们，爱情是奢望，是奢侈品，游戏也是奢望，一切新奇的事物都是奢望。
而已经离开并回家的那些年轻的女孩子们，歌里的爱情是自然就已存在的，而诉说的，是爱情的苦恼。
我们是浪人，即使曾拥有一段短暂的爱情，也知道始终自己是会要离开某个地方，然后，爱情就成为过去。
它是奢望，它是会成为回忆。
然后发现时代的变化，远超自己世界所处的位置。
还是依然一个人头也不回地，即使走远了默默流泪也不会让人看到么？
这坚强而又内心柔弱的我们。
不知道第一次被同龄人认为：一看我就应该是属于90后的，我该做如何感想？
就让我先偷着笑一会儿吧。
微信乐库没有华仔的版本，点击「阅读原文」去听吧。</description>
    </item>
    
    <item>
      <title>写来的都是过去</title>
      <link>https://jeremyyin.com/post/2017-01-12-%E5%86%99%E6%9D%A5%E7%9A%84%E9%83%BD%E6%98%AF%E8%BF%87%E5%8E%BB/</link>
      <pubDate>Thu, 12 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2017-01-12-%E5%86%99%E6%9D%A5%E7%9A%84%E9%83%BD%E6%98%AF%E8%BF%87%E5%8E%BB/</guid>
      <description>第六周快过完，写完又测试完了5个API，大概分三个项目完成，今天刚完成第三个。
又预备开始下一个“小”项目。
说小，是格局小，而又很大，如果格局放大来看的话。
不论将来多大，且看且行。
说，写出来的都是过去。
是因为，事情做完了，松一口气，刚好会有机会回望过去的时间，然后，再转头望向未来。
我总是以为我能在事情完毕之后能说出点什么，然而并没有。
几乎等事情差不多快完毕的时候，目光已经开始转向下一个目标。
不过还是可以回顾下之前的某些时刻。
之前说，带上恐惧前行，我想是确实有必要的。
在好奇心已经无法支撑起前进的步伐，那么靠恐惧来推动，是现实的做法。
只是，如果不能Hold住这种恐惧，让我很怕的事情就是被恐惧压垮，身心俱疲。
我又是想多了吧，想项目多时候，我就是往多极了想，然后再被打回原形。
这样也挺好的，务实。
其实好像还有一些其它事情总是在某些时候在脑海里冒出来，然而等到能有机会写的时候，几乎又消失得全然不见。
所以就先这样吧，能写什么就写什么，不该对这个有顾虑。
今年，会随回乡大军回家，来年又随大军回城。
其实等那会儿已经2月了，也不必介意吧，不就是2017而已。
下次，还是有想法就行动起来吧，无论什么；很多事情，会被时间抹掉的。</description>
    </item>
    
    <item>
      <title>一年快过去了还是要说点什么</title>
      <link>https://jeremyyin.com/post/2016-12-30-%E4%B8%80%E5%B9%B4%E5%BF%AB%E8%BF%87%E5%8E%BB%E4%BA%86%E8%BF%98%E6%98%AF%E8%A6%81%E8%AF%B4%E7%82%B9%E4%BB%80%E4%B9%88/</link>
      <pubDate>Fri, 30 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2016-12-30-%E4%B8%80%E5%B9%B4%E5%BF%AB%E8%BF%87%E5%8E%BB%E4%BA%86%E8%BF%98%E6%98%AF%E8%A6%81%E8%AF%B4%E7%82%B9%E4%BB%80%E4%B9%88/</guid>
      <description>2016就快过去了，而我总是写不好这四个数字，无论今年在多少本书上面曾写下了它，就如同我也写不好我的名字一样，毕竟如今我连字都不会写了。
这张图片，现在看起来，我觉得里面包含着我个人今年的许多信息。我持续地在思考着一些事情，一些关于曾经做过的一些事情，所以我今天又打开它来看，并截下了这张图。
这些年，我更加坚定地认为当前所做的一切都将在未来某个时间，让你回头的时候，发现很多事情，在很久以前，就已经悄悄地埋下了种子，而当时并不会认为这会有多么大的价值和明显的用处。
或许是因为一个无故的起因，或许是因为不那么明显的一句话，也或者是因为曾路过某地，无意间目光瞟过的某些瞬间。
这一切的一切，都有它的无形而有无处不在的意义。
我对一切寄予极度地悲观之态度，而又不断给自己寄予无尽的希望之光。
这，是极度地自私。
所以，无论如何我都会错过太多身边的一切，有意无意地望着它们从我身边远去，有心无心地悄然离开它们。
只好说，祝安好，也祝自己安好。
当已悄然远行，并不会告之你们我将要去的目的地。
经历了什么，错过了什么，又有了什么悲伤，又有了什么喜悦，都将随时间而不断流走。
抛开曾有，不顾一切，没有选择，便是最好的行程。
你们，请与我，一起，走向2017吧。
注定，我们将还会走过许多年。</description>
    </item>
    
    <item>
      <title>if True or if not True</title>
      <link>https://jeremyyin.com/python/2016-12-23-if-true-or-if-not-true/</link>
      <pubDate>Fri, 23 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/python/2016-12-23-if-true-or-if-not-true/</guid>
      <description>明天就是平安夜，我打算今晚啃个苹果。
以程序员的角色上岗工作已经正式3周过去了，这算是正式地公告一下。
放在几年前我从未想过我会正式地成为一名可以自己编程写代码的人，可是在这几年的工作中逐渐地接触到一些事务，使得我认为在未来的日子里，不会自己写几行程序代码的人们总是会有一些很难过的坎儿。
所以，无论将来如何变化，我先去坑自己一把，把编程这事儿彻底地扶正了来做，再也不是什么随便搞搞就行的事情了。
但是说回来这事儿还真不是会不会程序语言语法这么简单的事情，学会了使用写法只是冰山冒个尖儿，下面水很深，路很长，坑更是多不胜数，我只能寄希望于天兵天将们不要懒惰。
这儿说，关于思维方式。
或许是我开始学习Python的时候，就接触到的都是：
如果True，就去做什么，否则，就做点什么。
然而今天深入到别人的项目中之后，基本上都是：
如果不是True，就做点什么，否则，就去做什么。
这使得我很困惑啊，脑子现在还晕。
就这么绕啊绕，不知道死了多少脑细胞，反正也没法具体数，你就给个超级大的数字就好了。
所以，啃个苹果清一清神儿吧。
祝平安夜幸福，祝圣诞节快乐，各位！
新年见！</description>
    </item>
    
    <item>
      <title>勇敢想更多，做更多</title>
      <link>https://jeremyyin.com/post/2016-12-17-%E5%8B%87%E6%95%A2%E6%83%B3%E6%9B%B4%E5%A4%9A%E5%81%9A%E6%9B%B4%E5%A4%9A/</link>
      <pubDate>Sat, 17 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2016-12-17-%E5%8B%87%E6%95%A2%E6%83%B3%E6%9B%B4%E5%A4%9A%E5%81%9A%E6%9B%B4%E5%A4%9A/</guid>
      <description>吸星大法
我们是在金庸的影视剧中长大的孩子，身边朋友有看金庸大部头长大的，我没有机会去看金庸的全本，只是在影视剧中看到一些这样或者那样的影子。
而我，还看的不认真，对于角色与情节，并说不上什么话来，可能还错误百出。
然而人脑确实是个神奇的东西，昨日回程路上一边想着晚上可以吃啥，一边也在想着：如果有机会进名门正派做入门弟子，从一招一式，一剑一掌开始学起，比如少林，比如华山，那就如同高中考上了好学校，有进了好专业，同时要是运气好遇到好师兄，那基本修炼成上乘武功，内力深厚，前程似锦，平步青云，只要自己不作死，那必定是处在山峰之巅，被人可望不可及的那种，即使未来不在武林称霸，也是足够有资本在武林之中留下姓名，凡人谈及就敬仰不及的。
然而，也有很多人在之中并无建树，一场小小对战可能死伤无数，成为他人嘴中无心顾及的炮灰，你一个人的性命，倒不是他们这些正派武林人士所需顾及的事情。
如果，要是没有能考上好大学，也没有能在一个好专业，也可能并不在自己所擅长的领域里面，或者是自己喜欢的领域里面，自然可能遇到一个牛逼的好大师兄的机会不大可能了吧。等些时日，要出去闯荡江湖，却发现自己所学全无用处，内力不及人家之万分一，还未近身便被打得倒地不起。
这是否就该找个无人的地方了却余生以谢不杀之恩。
完成任务
如果没有了了却余生的想法，路遇恩人，得一席之地安身，那便开始了与上面那群人完全不一样的路程了吧。
拿到一个任务，绿林的人们知道自己不会有那么雄厚的资源可供使用：怎么简单怎么来。
可是，逐渐地发现这始终会有问题，等过一段时间，到处救火救急，忙的不可开交，却不知道自己到底可以在什么时间能有新的发展空间。
虽然说怎么简单怎么来，可是有一个前提，就是：真的了解了需求的具体情况，而不是想当然地认为按什么样的最简单的方式来操作。
一个需求，可能一句话简单说说就听过去了，在没有形成成熟的流程并经历过各种考验的团队中，基本上可能完全看接受这个需求的团队的自由发挥能力。
然而一个需求是有它的本质动力存在，知晓它的本来目的，才能分析出它背后需要涉及到的功能设计，然后围绕这些功能，通过各种技术底层的构建，设计流程，构建数据，最终完成此次项目的完整实现。
为什么要去问它的本来目的，是信息在传递的过程中肯定会存在偏颇和丢失，沟通的多少在一定的程度上决定了未来这个项目的发展能力。
设计一个功能，本质上是为了未来而设计的，是期望它在未来的一定时间里面，助力它所在的那个整体之中得到一定的发展速度。
这就如同，买电脑要大概稍微考虑未来2年的需求，买其它的任何东西，都相应地要稍稍留出一些些空间为未来考虑。而完全不留任何未来空间的想法，在很大的概率上可能在买回来拿到手的那一刻，它就已经有些无法跟得上世间的脚步。当然有一种例外，就是短期用完就完事儿这种。
当然会说要考虑到预算问题，可是其实仔细想想，比起那些未来的时间，眼前的这些超出的明明可以承受的那部分，根本微不足道。
虽然在现在这个时代，我们很多事情都讲究速度，但是是眼前的速度，还是未来可预见的一段时间的速度，这个需要人们这个复杂的每个个体去花上时间思考。
它毕竟决定了未来的发展能力。
完成一个任务绝不是仅仅完成任务那么简单，无论是对项目本身还是对自己，它都是提供未来发展的机会。
既然我们已经没有了之前的很好的那些好机会好平台好环境，我想，把眼光和目标放在那些可及的高一些些的地方，用上吸星大法接受来自大量信息的轰炸，并等待时间和成长去消化它们，勇敢地想多一些，做多一些，虽然可能会面对失去很多的悲伤，但是相比起得过且过最终失落，我觉得可能是会好那么一些。
每次都超出能够得着的那么一些些，等到未来回头，才能发现已经走很远。
在曲折的道路上蜿蜒前行。</description>
    </item>
    
    <item>
      <title>带上恐惧前行，有多远走多远</title>
      <link>https://jeremyyin.com/post/2016-12-05-%E5%B8%A6%E4%B8%8A%E6%81%90%E6%83%A7%E5%89%8D%E8%A1%8C%E6%9C%89%E5%A4%9A%E8%BF%9C%E8%B5%B0%E5%A4%9A%E8%BF%9C/</link>
      <pubDate>Mon, 05 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2016-12-05-%E5%B8%A6%E4%B8%8A%E6%81%90%E6%83%A7%E5%89%8D%E8%A1%8C%E6%9C%89%E5%A4%9A%E8%BF%9C%E8%B5%B0%E5%A4%9A%E8%BF%9C/</guid>
      <description>上班第二天，面对一切，毫无头绪，也同时又些事情，需要妥协，就当为一次机会。
面对陌生，总是恐惧。
有时候不敢回望过去，过去都是恐惧的影子，挥也挥不去。
可这也难免就会在某个不知明的夜晚，它们突发情绪，让你以为这就是跌下悬崖的时刻。
有人说，营销带上恐惧，便有了爆发的可能。
确实，买各种东西的时候都是带着恐惧而按下最后的确认，那是对未来欲望的恐惧。
有恐惧便有紧迫感，很怕很怕的，担忧到累心，直至心疲力尽。
雾，散不去，朦朦中看不清前行的石子路，又或是泥泞小道，不注意就摔个趔趄，又用手摸一摸脸，还好，没事儿。
泥巴盖去了划开的口子，继续赶路，忘记了疼。
走一天，便有一天的希望。
走得远了，就忘记了害怕。</description>
    </item>
    
    <item>
      <title>我暂时，不改了</title>
      <link>https://jeremyyin.com/post/2016-12-01-%E6%88%91%E6%9A%82%E6%97%B6%E4%B8%8D%E6%94%B9%E4%BA%86/</link>
      <pubDate>Thu, 01 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2016-12-01-%E6%88%91%E6%9A%82%E6%97%B6%E4%B8%8D%E6%94%B9%E4%BA%86/</guid>
      <description>无论是否是因为我带的MacBook Pro在帮我镇场，还是无形中有个意识在提示我晚一点再写，先去洗漱完再推新版，总之，现在，我不改它了，就让它默默地在哪里挂着吧。这也算，是这一段经历的记录，以及，它所需要经历的过程。
明儿个，如果没有什么特别的意外，特别特别的意外，能让做出决定的事情中途变卦，如果没有的话，明儿个开始我就去上班啦。
十二月的第一天，十二月的第二天，十二月的第三天，十二月的第四天，十二月的第五天……
都是好日子。
说一个额外的话题：进步与发展一定会是来自于外部。
为什么要提这个话题，是因为，我昨天又收到了一本书「《Python Web 开发实战》董伟明 著」，看到这个「著」字了没，这在挑书届是一条不成文的经验：「著」就是自己写的，「编著」就是大家一起编写的。
而至于「编著」它到底是大家一起写的还是大家一起“编”的，没有人知道。不是说编著的书就一定没有好书，而是说从人性的角度和成书的概率上来说，它，在较大的几率上会不那么靠谱一些。
要不你去翻一翻曾经小学初中高中大学十几年的课本看看？
还有去书店或者在线书店看一看那些鸡汤届文摘届看看？
也不是说「著」就一定好。而是，这是个我在没看到书内容之前，挑书所考量的因素之一。
为什么说进步与发展一定会是来自于外部，当他们所有人都认为有些事情是理所当然，完全无意识到事情的惨败程度，当他们所有人都觉得无力完成或者其实真的无力完成的时候，只有仅仅那些具备无所畏惧之精神的人们才会选择一记痛击，带来新的流动和血液，产生新的爆发力。
写上面这本书的人，豆瓣的。
他，不是IT专业出身的。
他，以前最早做运维的。
他，也不是原本就会Python的。
他，曾也是只会shell也沾沾自喜的。
直到，看到疼痛的差距，现实被刷新。
如果没有特别的意外，我将进入预计2-3年期的专门技术领域深入。
同时，对于我曾待过的电商物流行业，我依然有想法放出我特有的一些东西出来，不过这我不做承诺，具体如何，全凭机缘，但都需努力。
奔跑吧骚年！</description>
    </item>
    
    <item>
      <title>橘子可能要坏了</title>
      <link>https://jeremyyin.com/post/2016-11-30-%E6%A9%98%E5%AD%90%E5%8F%AF%E8%83%BD%E8%A6%81%E5%9D%8F%E4%BA%86/</link>
      <pubDate>Wed, 30 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2016-11-30-%E6%A9%98%E5%AD%90%E5%8F%AF%E8%83%BD%E8%A6%81%E5%9D%8F%E4%BA%86/</guid>
      <description>我记得小时候家里大概在这个时候总是会攒上一大袋子橘子，个头不是很大皮又很好剥开的那种，然后就经常三个五个地从袋子里掏出来吃。
具体叫啥名儿，或许我又不清楚了，或许是我们离江西近，有些苗子都是那边引进来的吧，江西的小柑橘还是蛮有名的。
近些年，几乎很少有机会吃到，也没有经常要去买水果和零食的习惯，毕竟自己平常大多数时候不是嘴馋的货。
下午接近晚上的时候，便出去走了走，随便走走便是十几公里，看来水库绿道作为深圳最美绿道也是可以的。
这张图片，便是今儿个拍的。这个地方，我拍过很多次，也是来得勤快的缘故吧，每次都有不一样的效果。
这天空的云，就如同橘子的红，透红透红的。
人在空气好空间宽敞的地方，也足够有时间想清楚一些事情。
我觉得，可能，暂时不应该盯着那些够不着的地方，但凡是什么「Python开发工程师」「大数据分析工程师」这些都不是我所完全能胜任的，我所面对的也不再是5年前人家看你足够有想法就能给个机会的形势了。
昨天我问自己走了多远，我回头看了眼，貌似是好像走了一些距离，也经过了好一些关口，可是，再看看前面，依然还很陡峭，或许自己可能认为给个机会就能够个手了。可是，刚够个手，和站在那儿继续看下一个关口，这之间还差了好多个坑需要填。
而这些坑，自然是不会有公司愿意替你填的，不能有这风险，必须要那些已经填完坑的。
我又拿了几个橘子吃吃看，甜甜的，也看到一个坏了的，扔了。
而小时候，经常就能翻到坏了的橘子。坏了，那就扔了。
兴趣的归兴趣，我还是先去站着够得着的吧，这对双方都好。
有得浪费，这是奢侈。
只可惜，可能收入会低，暂时的。
吹过的牛逼将来慢慢说吧，于我，更久。</description>
    </item>
    
    <item>
      <title>然起伏 然等待 然焦虑 然妥协</title>
      <link>https://jeremyyin.com/post/2016-11-29-%E7%84%B6%E8%B5%B7%E4%BC%8F-%E7%84%B6%E7%AD%89%E5%BE%85-%E7%84%B6%E7%84%A6%E8%99%91-%E7%84%B6%E5%A6%A5%E5%8D%8F/</link>
      <pubDate>Tue, 29 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2016-11-29-%E7%84%B6%E8%B5%B7%E4%BC%8F-%E7%84%B6%E7%AD%89%E5%BE%85-%E7%84%B6%E7%84%A6%E8%99%91-%E7%84%B6%E5%A6%A5%E5%8D%8F/</guid>
      <description>眼看着就是30 November了，这天再过去，就剩2016的最后一个月。
虽然，从农历计算还有些日子，然，我也是焦虑的。
我不怎么管农历的事情。
也表示，从9月底，我彻彻底底地度过了10月和11月两个月之久，这比我想象的要久。
不说你也知道我最近在被什么事情困扰着。
话说虽然从台湾回来想着是否要发一些照片让大家看看，不过，我总是觉得仅仅是发出9张普通照片或者是提供出一篇类似某窝好几年前的游记文章，我都觉得不符合口味。
所以，这事儿，就暂时搁置了吧。
说说一些其它的事情吧，还是。话说年龄到了这个阶段呢，或者是甚至再大一些比如三年后的我，曾梦想着生活会如同某个想象中的样子，如同电影那样。可是现实并不如此，我们看的是别人的生活，总以为自己能轻松抵达。
啊呀我这是要说什么了呢……
虽然我想着过去的生活都是过去的事情不值得去回顾或者回忆，然而总会有一些事情和状态会让思绪自己走到那些地方去，拦也拦不住。就偶尔来那么一下下吧，回忆会有让人有一种自己已经走了好远的感觉，可我到底又走了多远呢。
我想走的远远的，远离家乡，远离熟悉的地方，远离曾经发生过任何事情的地方，特别是我愿意远离任何我曾生活过的地方。
就如同，我现在要远离任何我曾工作过的岗位类型一样，曲折地，走着，或者说是爬着。
爬山，我尽量每次走不一样的上山道路，在尝试过了很多次了之后，都熟悉了我就甚至可能不愿再爬同一座山了。
不知道是否真的有某种特质会被人在很早就发现并认为可以去做，然后等到我在很多年之后，慢慢地发现正在朝着很多年前他们说过的那些话而努力着，那么现在，完成了多少。这是有意识地还是被他们的看法影响之后，然后就认为自己可以做到他们认为的那样呢？这这是个奇妙的逻辑，我要不要先吹几个气球上天呢，或许，哪天我就追上了它们曾有过的高度，只是，可能会很久，很久吧。虽然，吹过的不一定都需要实现，不一定都需要。
如果，我能在感动自己之余，顺手带上几个朋友走入不可救药之坑，感动得稀里哗啦然后不明所以。
如果，我真能在感动自己之余，顺手把自己吹过的气球都慢慢实现，不知谁能为我的生活付出生活费和未来孩子的奶粉钱呢，还有，买包的还没算呢。
只可惜，我现在已经不买便宜的包了，又该怎么办呢。
买不起了。</description>
    </item>
    
    <item>
      <title>下雨跟我走在哪里并无什么关联</title>
      <link>https://jeremyyin.com/post/2016-11-26-%E5%AE%83%E4%B8%8B%E9%9B%A8%E8%B7%9F%E6%88%91%E8%B5%B0%E5%9C%A8%E5%93%AA%E9%87%8C%E5%B9%B6%E6%97%A0%E4%BB%80%E4%B9%88%E5%85%B3%E8%81%94/</link>
      <pubDate>Sat, 26 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2016-11-26-%E5%AE%83%E4%B8%8B%E9%9B%A8%E8%B7%9F%E6%88%91%E8%B5%B0%E5%9C%A8%E5%93%AA%E9%87%8C%E5%B9%B6%E6%97%A0%E4%BB%80%E4%B9%88%E5%85%B3%E8%81%94/</guid>
      <description>首先恭祝F&amp;amp;N乔迁之喜；打完火锅回来走出地铁站，发生如下一幕：
将雨伞从伞袋中抽出，此动作应当如剑客般，面对迎面而来的对手，脚步急促有韵而沉稳，左手握鞘右手拔剑，双眼犀利有神，当剑起翘落，然后按下开伞开关雨伞随即展开，此时，淡然走向雨中留下身后无数功与名。
回来深圳给我的感觉好像下了好久的雨，却然而被一同打完火锅的伙伴们提醒道：前天没下雨，昨天也是大太阳，一整天都是。
我随即陷入了深深地沉思中。
我们每天盯着APP查看目的地未来7天的天气预报，想象着会有某一天看到未来一段时间的天气能够完全与我们的预计行程安排会契合，然而这种概率貌似会很低，但是希望是仍然需要有的是不是，万一，有了呢。
天气预报的准确率有多高我无数据支持，但是比起很多年以前来说，理论上应该是准确了许多就对啦。
可是出门看天的习惯依然是作为必备技能随时展现，走一步看一步天，然后等着掉入坑里。
掉坑不是真的掉坑，是自己挖坑自己填，坑和坑还是有区别的。每走入一段旅程，都是为自己开启一个新坑的开始。
然而神奇幸运的是，看到我晒黑了，这我得告诉你，出门在外的加起来近一个月的旅程中，我却并无遇到不适合出行的天气。
我走到哪儿，天气都是好好的。
可是，现在，它下雨并没有想停的意思。
所以，这应该与我在哪里并无什么关联。
而我曾，这么以为过，至少有那么一会儿有人说自己走到哪儿哪儿就下雨我是半信了的。
我现正在找工作，如果你觉得可以内推，点击下方「阅读原文」 即可在GitHub查阅我的简历</description>
    </item>
    
    <item>
      <title>面试与旅行一样，稍近一步打破一丝幻象</title>
      <link>https://jeremyyin.com/post/2016-11-23-%E9%9D%A2%E8%AF%95%E4%B8%8E%E6%97%85%E8%A1%8C%E4%B8%80%E6%A0%B7%E7%A8%8D%E8%BF%91%E4%B8%80%E6%AD%A5%E6%89%93%E7%A0%B4%E4%B8%80%E4%B8%9D%E5%B9%BB%E8%B1%A1/</link>
      <pubDate>Wed, 23 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2016-11-23-%E9%9D%A2%E8%AF%95%E4%B8%8E%E6%97%85%E8%A1%8C%E4%B8%80%E6%A0%B7%E7%A8%8D%E8%BF%91%E4%B8%80%E6%AD%A5%E6%89%93%E7%A0%B4%E4%B8%80%E4%B8%9D%E5%B9%BB%E8%B1%A1/</guid>
      <description>从9月底到11月底，中间度过了两个月。
两个月，经历了两次间隔不久的旅程。
一次，从湘西走到川北，再去到雾城。
另一次，从岛西绕到岛东。
从雾城回来之后，便筹划着去下一个地方，毕竟这是最开始首先计划去的地方。在等待的期间，想着，如果不去，会是如何，我曾考虑过这个问题。但是，依然如同女孩买包包男孩买电脑那样，如果不去，就总是惦记，而这种感觉，是非常不好的，它很容易会让人在未来错失太多。
如果你真的问我此行有什么收获，我想，我也说不出个一二三四，毕竟，文字功底的水平摆在这，不够。
被存满了的相机和手机，我回来第一件事情就将它们都清理出来，换个地方存着。
也想着，如果有些想明白了，我想着拿那些素材可以用来做点什么，比如，剪一段视频。
然而，暂时我没想明白，它仅仅还只是一个火花，我也不知道它能维持多久，有些东西，总都是有时效性的，毕竟。
在通过某个十字路口的某一瞬间，我想我是不是又来到了第5年的黑暗时期，就如同突然转身发现身后深渊万丈，时间已过万重山，回不去；而眼前又深坑辽阔，遍布荆棘，很难走。
虽然现在，已远没有当初那么害怕了。
给一纸简历，为获一丝兴趣；
约一次面试，为破一丝幻象。
稍近一步，将距离再拉近一些来观察，以便进一步做些了解。
幻象，在看到文字之后面对文字所透露出来的明显与不那么明显的信息进行主观想象，并尝试以此建立一个人物场景画像。
而在我们无数次的尝试之后，有了并不那么清晰的幻象。
参与一次面试，都当是为把这幻象，打破它，然后，又重新建立，觉得好，就要了它，觉得不行，就放弃它。
而参与一次旅行，这感受与过程，几乎一模一样。
我曾不知道我将会去到哪里，就如同抵达目的地之后才去找寻夜晚住宿。惊喜的事情总是只能是在事后才会发现原来刚刚经历的过程是真的如此地美好，而失望却可以在抵达目的地之前便可感知事情的不靠谱。
现在也不可预知我将要去哪里，希望与恐惧并行，意外和失望总应也是不可避免。
或许我可以期望如同在岛上那样的境况，也来点意外惊喜吧！
我在考虑很久和测试了许多次之后，我最终决定了将我的简历换一种方式来处理，启用Markdown格式撰写简历文件，使用GitHub来帮我存储和公开在线展示简历内容，以及利用git技术和git flow工作流程进行文件版本控制。
点击下方「阅读原文」 即可在GitHub查阅我的简历</description>
    </item>
    
    <item>
      <title>落叶不知秋</title>
      <link>https://jeremyyin.com/post/2016-08-08-%E8%90%BD%E5%8F%B6%E4%B8%8D%E7%9F%A5%E7%A7%8B/</link>
      <pubDate>Mon, 08 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2016-08-08-%E8%90%BD%E5%8F%B6%E4%B8%8D%E7%9F%A5%E7%A7%8B/</guid>
      <description>我以为秋天的来临会使得自己变得更加的喜悦，然而，它并没有。
我想去外面走走，骑车或者是走路都可以，可是并没有。
有更吸引人的东西在招摇着。
如果说一个人到底能跟自己在一个相对封闭的空间里一直地持续呆上多久的时间，我想，这并不能得到一个明确的结果。
就像，那几年前的秋天一样，我一个人，在漫山遍野地走，走过了白日，又走向了黑夜，山里的黑夜并不是完全的地寂静。
那是，十几年前的秋天了。
现在，不再需要担心会有黑夜的惧怕感了，毕竟，如果就自然地沉睡去，即时不关灯也是可以的。
可是在山里的黑夜，不能睡。
我为什么会在山野里晃荡呢？
这是我一直没能搞明白的一件事情。
即时远处能看到灯火通明，能听到狗吠鸡鸣，可并不会有人能知道，在一眼扫过的某一大片黑色的空间里，还有一个人的存在吧。
黑夜的山，望过去总是有点惊悚吓人。
灯火通明的黑夜里，我更加难以入睡了。
我始终认为一个行为是有一定的来由的，比如，说出一句话，或者，做出一个动作。
即时是无意识，那也就是仅仅是自己所认为的无意识吧。
总有一天，能被回想起来。
这又会使得我，回忆起几年前的一些画面和情景。
所以，记忆太好总是不是什么好事情。
而我，逐渐地，在忘记一些事情。
顺便地，也忘记了很多事情。
比如，昨天提到过的那什么，我怎么就想不起来了呢……
只是希望，将来……
那又会是怎样的呢？
我应该还会能想起现在的样子。
希望。</description>
    </item>
    
    <item>
      <title>我们家的空调29度</title>
      <link>https://jeremyyin.com/post/2016-06-29-%E6%88%91%E4%BB%AC%E5%AE%B6%E7%9A%84%E7%A9%BA%E8%B0%8329%E5%BA%A6/</link>
      <pubDate>Wed, 29 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2016-06-29-%E6%88%91%E4%BB%AC%E5%AE%B6%E7%9A%84%E7%A9%BA%E8%B0%8329%E5%BA%A6/</guid>
      <description>有时候想想，我们生活的空间也是足够恶劣的了。
办公室，工地开了一年多，duanduanduan地搞了半年多，dingdingding地搞了半年多，我又开始怀疑接下来的日子里，wuwuwu的节奏怕是难以逃离了。
不通风，不透气，开窗嘈杂，关窗憋屈。
唯一能使得我能够静心地坐着的缘故是，冷冷地。
每日早晨，到公司第一件事情是降温，降体温，体表温度。
等汗渍干去，等头脑冰凉。
才得以开始干活和思考事情。
还好这也习惯了，花去时间并不需要很多，顺便也就是吃个早餐的时间。
家里的空调效果出奇地好，一个字，新。
虽然用了一年多了似乎，当然跟新的也相差不远。
早些天，26度，鼻子有点塞。
27.
28.
29.
对头，刚刚好的样子，不冰，也不温。
仅稍稍有点凉凉的。
偶尔为了房间快速降温，跑去25，疯！
没有空调是肯定写不出东西的，觉都睡不好，何况呢。
那天车上听邻座的女孩说18度的被子，我深深的认为那肯定是空调要修一修补一补东西了。
晚上我也依然会盖被子。
这次我把字体调大了一个号，到了15px，段距1.3，你觉得如何。要是能会点css就好了……</description>
    </item>
    
    <item>
      <title>给一个列表去重复却又要保留顺序</title>
      <link>https://jeremyyin.com/python/2016-06-28-%E7%BB%99%E4%B8%80%E4%B8%AA%E5%88%97%E8%A1%A8%E5%8E%BB%E9%87%8D%E5%A4%8D%E5%8D%B4%E5%8F%88%E8%A6%81%E4%BF%9D%E7%95%99%E9%A1%BA%E5%BA%8F/</link>
      <pubDate>Tue, 28 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/python/2016-06-28-%E7%BB%99%E4%B8%80%E4%B8%AA%E5%88%97%E8%A1%A8%E5%8E%BB%E9%87%8D%E5%A4%8D%E5%8D%B4%E5%8F%88%E8%A6%81%E4%BF%9D%E7%95%99%E9%A1%BA%E5%BA%8F/</guid>
      <description>collections.OrderedDict.fromkeys(list).keys() 在 Python 中，有时候有需要用到保留原始顺序而又能去掉重复的列表。
而在 Python 自身的基本数据结构里面，给 list 去除重复可以用 set(list) 来进行操作而得到一个没有重复的set集合，但是这样也就把list元素原有的先后出现的顺序而被打乱了，打的乱七八糟的。
会写 Python 的也可能会找到很多的解决办法，有容易的有复杂的有高级的。
我的方法 在 Python 的 collections 包里面有个数据结构叫 OrderedDict，有序字典。
字典的 key 有个特性是不会重复，Python 默认的字典的 key 也是无序的，这是由它本身的特性决定的，但是有人结合了 list 的特性，制造了这个有序字典的数据结构，它输出的 key 和 value 都是有序的。
所以利用它的这些特性，这样理论上就会很容易就能得到有序的没有重复的 list 了。
import collections datalist = [&amp;#39;1&amp;#39;, &amp;#39;4&amp;#39;, &amp;#39;3&amp;#39;, &amp;#39;2&amp;#39;, &amp;#39;2&amp;#39;, &amp;#39;4&amp;#39;] newlist = collections.OrderedDict.fromkeys(datalist).keys() print(newlist) [&amp;#39;1&amp;#39;, &amp;#39;4&amp;#39;, &amp;#39;3&amp;#39;, &amp;#39;2&amp;#39;] 这样就能得到一个保留元素第一次出现的先后顺序又去除了重复元素的list了。一般用来给人查看或者是显示操作结果的时候，是对人很友好的。
好了，这里其实是第一次正经测试 Markdown 语法来写文章的内容，目前看起来貌似还蛮美观的吭。</description>
    </item>
    
    <item>
      <title>遇见木心美术馆是个意外</title>
      <link>https://jeremyyin.com/post/2016-06-28-%E9%81%87%E8%A7%81%E6%9C%A8%E5%BF%83%E7%BE%8E%E6%9C%AF%E9%A6%86%E6%98%AF%E4%B8%AA%E6%84%8F%E5%A4%96/</link>
      <pubDate>Tue, 28 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/post/2016-06-28-%E9%81%87%E8%A7%81%E6%9C%A8%E5%BF%83%E7%BE%8E%E6%9C%AF%E9%A6%86%E6%98%AF%E4%B8%AA%E6%84%8F%E5%A4%96/</guid>
      <description>记得，早些时候去了乌镇。
今天，想起来Keep一下。
歇着，便又想起来木心美术馆的样子。
干净，利落，简约，干练，唯美。
我没能拥有华丽的词语储备，使得我无法能更加华丽丽地将它诉诸于你的脑海里。
所以恐怕还是需要你自己去研究一番，才能有自己的印象了。
我本是在乌镇，元宵刚过的乌镇并没有太多的游人。听民宿的老板说活，前些日子，这里人山人海，好几万人。我想，我来的时候也是刚好了，我的确是无法忍受人山人海的画面感。
这小镇的地方倒是并不大，但考虑到步行并不合适，所以就试着去租了自行车。
如果这个时候，不会骑车，倒不是有啥不可的，或许还有其它更好的方式也不一定。
当然，我会。
乌镇的自行车租用比深圳要高级，微信就能租车，打开微信，关注，注册，交押金，取车，piapiapia地就奔上马路嗨去了。
南街区，未开发。
有开发的东西街区，都设好了检票口，人们都说东区不要去了，晚上直接去西区就好，它们都一样的。
我没去东区里面，我在外面兜圈，听了戏，拍了视频。
又遇见可以邮寄明信片的店家，上了些年纪的老叔叔，但是做起事情依然干练，意外豪华地选了几套，随机抽了几张写上字，寄出，其它的，叔叔都给盖了邮戳，手起戳落，利索。
天色暗，扔进邮筒。
到西区外面还了车，往西区里面走了去。
买票。
虽然好贵的。
有船，没坐。
走路进去，乌镇剧院。
而后就看到了木心美术馆，这是个意外。
我没想到它在这里，并未作事先的功课，所以不知道它在这里。
遇到了，就是意外的惊喜，不过，得额外买票，也就买了吧，虽然有点怪怪的。
这就是特么的惊喜。
就此打住，不细说了。
要乌镇的明信片可以找我，要不要收钱，视君心情。
题图：乌镇剧院</description>
    </item>
    
    <item>
      <title></title>
      <link>https://jeremyyin.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/about/</guid>
      <description>Jeremy&#39;s Blog     {{ .Site.Title }} Home  Post  Python  Saleor  About  RSS         目前主要是同步在我的微信公众号「JeremyYin」发布的文章。
微信公众号：jeremyyincom
         Author | Jeremy Yin
Python Engineer
       © 2018 · Jeremy&#39;s blog          (function(i,s,o,g,r,a,m){i[&#39;GoogleAnalyticsObject&#39;]=r;i[r]=i[r]||function(){ (i[r].</description>
    </item>
    
    <item>
      <title></title>
      <link>https://jeremyyin.com/resume/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jeremyyin.com/resume/</guid>
      <description> Jeremy Yin&#39;s Resume  html, body, div, embed { /*height:100%;*/ /*min-height: 842px;*/ min-height: -moz-available; min-height: -webkit-fill-available; width:100%; margin:0 }       </description>
    </item>
    
  </channel>
</rss>